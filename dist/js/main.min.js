const tokenAPI="https://ajax.test-danit.com/api/v2/cards/login";let trueToken;async function getToken(e,t){try{const n=await fetch(tokenAPI,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});if(n.ok){return await n.text()}throw new Error("User is not registered!")}catch(e){alert(e.message)}}async function showHide(){const e=document.querySelector(".login-button"),t=document.querySelector(".logout-button"),n=document.querySelector(".create-visit-button");document.querySelector(".filter__section");e.classList.add("hidden"),t.classList.remove("hidden"),n.classList.remove("hidden")}async function login(){const e=document.querySelector(".login-button"),t=document.querySelector(".logout-button");sessionStorage.getItem("token")?(showHide(),await fetchAndDisplayCards()):e.addEventListener("click",(async function(){const e=document.querySelector("#authorization-modal");e.style.display="block";const t=e.querySelector('input[type="email"]'),n=e.querySelector('input[type="password"]');e.querySelector(".send-button").addEventListener("click",(async function(o){o.preventDefault(),t.value&&n.value?async function(e,t,n){const o=await getToken(t,n);sessionStorage.token=o,o&&(showHide(),e.style.display="none",trueToken=o,await fetchAndDisplayCards())}(e,t.value,n.value):alert("Fill in all fields!")})),e.addEventListener("click",o=>{(o.target.classList.contains("modal")||o.target.classList.contains("btn-close"))&&(e.style.display="none",t.value="",n.value="")})})),t.addEventListener("click",()=>{sessionStorage.removeItem("token"),window.location.reload()})}async function fetchAndDisplayCards(){const e=sessionStorage.getItem("token");if(e)try{const t=await fetch("https://ajax.test-danit.com/api/v2/cards",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}});if(t.ok){const e=await t.json();document.querySelector("#taskBoard").innerHTML="",e.forEach(async e=>{await displayCard(e)})}else console.error("Error fetching cards:",t.statusText)}catch(e){console.error("Error fetching cards:",e)}}async function displayCard(e){const t=document.querySelector("#taskBoard"),n=document.createElement("div");n.className="card",n.setAttribute("data-id",e.id),n.innerHTML=`\n      <div class="card__text">\n      <h4>Name:</h4> <p>${e.name}</p>\n      <h4>Doctor:</h4> <p>${e.doctor}</p>\n      <h4>Description:</h4> <p>${e.description}</p>\n      </div>\n      <div class="button__contianer">\n      <button onclick="showMore(${e.id})">Show more</button>\n      <button onclick="openEditModal(${e.id})">Edit</button>\n      </div>\n      <span class="delete-icon" onclick="deleteCard(${e.id})">&#10006;</span>\n    `,t.appendChild(n)}async function getAllCards(){const e=await fetch("https://ajax.test-danit.com/api/v2/cards",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+token}});(await e.json()).forEach(async e=>{await displayCard(e)})}async function deleteCard(e){if(confirm("Are you sure, you want to delete?")){const t=await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token}});if(t.ok){document.querySelector(`.card[data-id="${e}"]`).remove()}else console.error("Error to delete:",t.statusText)}}async function openEditModal(e){const t=sessionStorage.getItem("token"),n=await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}),o=await n.json(),a=(e,t)=>e===t?"selected":"",i=document.createElement("div");i.className="edit__form",i.innerHTML=`\n    <div class="input-group">\n      <input required="" type="text" name="text" autocomplete="off" class="input" id="editName" value="${o.name}">\n      <label for="editName" class="user-label">Name</label>\n    </div>\n    <label for="editDoctor" class="select__label name__select1">Doctor</label>\n    <div class="select select__edit-container">\n    <select id="editDoctor" class="edit__select" onchange="handleDoctorChange()">\n    <option value="Cardiologist" ${a(o.doctor,"Cardiologist")}>Cardiologist</option>\n    <option value="Dentist"  ${a(o.doctor,"Dentist")}>Dentist</option>\n    <option value="Therapist"  ${a(o.doctor,"Therapist")}>Therapist</option>\n    </select>\n    </div>\n    <div class="input-group">\n    <input required="" type="text" name="text" autocomplete="off" class="input" id="editDescription" value="${o.description}">\n    <label for="editDescription" class="user-label">Description</label>\n  </div>\n    \n    <label for="editStatus" class="select__label name__select2">Status</label>\n    <div class="select select__edit-container">\n    <select id="editStatus" class="edit__select">\n      <option value="" disabled selected>Select status</option>\n      <option value="active" ${a(o.status,"active")}>Active</option>\n      <option value="completed" ${a(o.status,"completed")}>Completed</option>\n    </select>\n    </div>\n    <label for="editPriority" class="select__label name__select3">Priority</label>\n    <div class="select select__edit-container">\n    <select id="editPriority" class="edit__select">\n      <option value="" disabled selected>Select priority</option>\n      <option value="low" ${a(o.priority,"low")}>Low</option>\n      <option value="medium" ${a(o.priority,"medium")}>Medium</option>\n      <option value = "high" ${a(o.priority,"high")}> High</ >\n    </select > \n    </div>\n    <div id="additionalFields"></div>\n    <button onclick="saveChanges(${e})">Save</button>\n  `;const s=document.getElementById("editFormContainer");s.innerHTML="",s.appendChild(i);document.getElementById("editModal").style.display="block",handleDoctorChange(o)}function handleDoctorChange(){const e=document.getElementById("editDoctor").value,t=document.getElementById("additionalFields");t.innerHTML="","Cardiologist"===e?t.innerHTML='\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editAge">\n        <label for="editAge" class="user-label">Age</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editPressure">\n        <label for="editPressure" class="user-label">Normal pressure</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editBMI">\n        <label for="editBMI" class="user-label">Body mass index</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="text" id="editHeartDisease">\n        <label for="editHeartDisease" class="user-label">Past diseases</label>\n      </div>\n    ':"Dentist"===e?t.innerHTML='\n    <label for="editLastVisitDate" class="select__label name__select4">Date of the last visit</label>\n    <div class="input-group">\n      <input required="" name="text" autocomplete="off" class="input edit__date" type="date" id="editLastVisitDate">\n    </div>\n    ':"Therapist"===e&&(t.innerHTML='\n    <div class="input-group">\n      <input required=""  name="text" autocomplete="off" class="input" type="number" id="editAge">\n      <label for="editAge" class="user-label">Age</label>\n    </div>\n    ')}function closeModal(){document.getElementById("editModal").style.display="none";document.querySelector(".edit__form").innerHTML=""}async function saveChanges(e){const t=sessionStorage.getItem("token"),n=document.querySelector(".edit__form"),o=document.querySelector(`.card[data-id= "${e}"]`),a=n.querySelector("#editName").value,i=n.querySelector("#editDoctor").value,s=n.querySelector("#editDescription").value,l={name:a,doctor:i,description:s,status:n.querySelector("#editStatus").value,priority:n.querySelector("#editPriority").value};if("Cardiologist"===i){const e=n.querySelector("#editAge").value,t=n.querySelector("#editPressure").value,o=n.querySelector("#editBMI").value,a=n.querySelector("#editHeartDisease").value;l.age=e,l.pulse=t,l.massIndex=o,l.pastDiseases=a}else if("Dentist"===i){const e=n.querySelector("#editLastVisitDate").value;l.lastVisit=e}else if("Therapist"===i){const e=n.querySelector("#editAge").value;l.age=e}await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+t},body:JSON.stringify(l)});o.innerHTML=`\n  <div class="card__text">\n  <h4>Name:</h4> <p>${a}</p>\n  <h4>Doctor:</h4> <p>${i}</p>\n  <h4>Description:</h4> <p>${s}</p>\n  </div>\n  <div class="button__contianer">\n  <button onclick="showMore(${e})">Show more</button>\n  <button onclick="openEditModal(${e})">Edit</button>\n  </div>\n  <span class="delete-icon" onclick="deleteCard(${e})">&#10006;</span>\n      `,closeModal()}async function showMore(e){const t=sessionStorage.getItem("token"),n=await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+t}}),o=await n.json(),a=document.getElementById("detailsContainer"),i=document.createElement("div");i.className="details__content";const s=`\n    <h4>Name:</h4> <p> ${o.name}</p>\n    <h4>Doctor: <span>${o.doctor}</span></h4>\n    <h4>Description:</h4> <p> ${o.description}</p>\n    <h4>Priority: <span>${o.priority}</span></h4>\n    <h4>Status: <span>${o.status}</span></h4>\n  `;"Cardiologist"===o.doctor?i.innerHTML=`\n    ${s}\n      <h4>Age: <span>${o.age}</span></h4>\n      <h4>Normalpressure: <span>${o.pulse}</span></h4>\n      <h4>Body mass index: <span>${o.massIndex}</span></h4>\n      <h4>Past diseases:</h4> <p> ${o.pastDiseases}</p>\n    `:"Dentist"===o.doctor?i.innerHTML=`\n    ${s}\n      <h4>Date of the last visit:</h4> <p> ${o.lastVisit}</p>\n    `:"Therapist"===o.doctor&&(i.innerHTML=`\n    ${s}\n    <h4>Age: <span>${o.age}</span></h4>\n    `),a.innerHTML="",a.appendChild(i);document.getElementById("detailsModal").style.display="block"}function closeShowMore(){document.getElementById("detailsModal").style.display="none"}async function filterCards(){const e=sessionStorage.getItem("token"),t=document.getElementById("searchInput").value.toLowerCase(),n=document.getElementById("doctorFilter").value,o=document.getElementById("statusFilter").value,a=document.getElementById("priorityFilter").value,i=await fetch("https://ajax.test-danit.com/api/v2/cards",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+e}});(await i.json()).forEach(e=>{const i=document.querySelector(`.card[data-id="${e.id}"]`),s=e.name,l=e.doctor,r=e.status,c=e.priority,d=s?s.toLowerCase():"",u=l||"",p=r?r.toLowerCase():"",m=c?c.toLowerCase():"",y=d.includes(t),h=""===n||u===n,v=""===o||p===o,g=""===a||m===a;i.style.display=y&&v&&g&&h?"":"none"})}login();
//# sourceMappingURL=../sourcemaps/main.min.js.map
