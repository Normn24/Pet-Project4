const tokenAPI="https://ajax.test-danit.com/api/v2/cards/login";let trueToken;async function getToken(e,t){try{const n=await fetch(tokenAPI,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});if(n.ok){return await n.text()}throw new Error("User is not registered!")}catch(e){alert(e.message)}}async function showHide(){const e=document.querySelector(".login-button"),t=document.querySelector(".logout-button"),n=document.querySelector(".create-visit-button");document.querySelector(".filter__section");e.classList.add("hidden"),t.classList.remove("hidden"),n.classList.remove("hidden")}async function login(){const e=document.querySelector(".login-button"),t=document.querySelector(".logout-button");sessionStorage.getItem("token")?showHide():e.addEventListener("click",(async function(){const e=document.querySelector("#authorization-modal");e.style.display="block";const t=e.querySelector('input[type="email"]'),n=e.querySelector('input[type="password"]');e.querySelector(".send-button").addEventListener("click",(async function(o){o.preventDefault(),t.value&&n.value?async function(e,t,n){const o=await getToken(t,n);sessionStorage.token=o,o&&(showHide(),e.style.display="none");trueToken=o}(e,t.value,n.value):alert("Fill in all fields!")})),e.addEventListener("click",o=>{(o.target.classList.contains("modal")||o.target.classList.contains("btn-close"))&&(e.style.display="none",t.value="",n.value="")})})),t.addEventListener("click",()=>{sessionStorage.removeItem("token"),window.location.reload()})}login();const token=sessionStorage.getItem("token");async function displayCard(e){const t=document.querySelector("#taskBoard"),n=document.createElement("div");n.className="card",n.setAttribute("data-id",e.id),n.innerHTML=`\n      <div class="card__text">\n      <h4>Name:</h4> <p>${e.name}</p>\n      <h4>Doctor:</h4> <p>${e.doctor}</p>\n      <h4>Description:</h4> <p>${e.description}</p>\n      </div>\n      <div class="button__contianer">\n      <button onclick="showMore(${e.id})">Show more</button>\n      <button onclick="openEditModal(${e.id})">Edit</button>\n      </div>\n      <span class="delete-icon" onclick="deleteCard(${e.id})">&#10006;</span>\n    `,t.appendChild(n)}async function getAllCards(){const e=await fetch("https://ajax.test-danit.com/api/v2/cards",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+token}});(await e.json()).forEach(async e=>{await displayCard(e)})}async function deleteCard(e){if(confirm("Are you sure, you want to delete?")){const t=await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token}});if(t.ok){document.querySelector(`.card[data-id="${e}"]`).remove()}else console.error("Error to delete:",t.statusText)}}async function openEditModal(e){const t=await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+token}}),n=await t.json(),o=(e,t)=>e===t?"selected":"",a=document.createElement("div");a.className="edit__form",a.innerHTML=`\n    <div class="input-group">\n      <input required="" type="text" name="text" autocomplete="off" class="input" id="editName" value="${n.name}">\n      <label for="editName" class="user-label">Name</label>\n    </div>\n    <label for="editDoctor" class="select__label name__select1">Doctor</label>\n    <div class="select select__edit-container">\n    <select id="editDoctor" class="edit__select" onchange="handleDoctorChange()">\n    <option value="Cardiologist" ${o(n.doctor,"Cardiologist")}>Cardiologist</option>\n    <option value="Dentist"  ${o(n.doctor,"Dentist")}>Dentist</option>\n    <option value="Therapist"  ${o(n.doctor,"Therapist")}>Therapist</option>\n    </select>\n    </div>\n    <div class="input-group">\n    <input required="" type="text" name="text" autocomplete="off" class="input" id="editDescription" value="${n.description}">\n    <label for="editDescription" class="user-label">Description</label>\n  </div>\n    \n    <label for="editStatus" class="select__label name__select2">Status</label>\n    <div class="select select__edit-container">\n    <select id="editStatus" class="edit__select">\n      <option value="" disabled selected>Select status</option>\n      <option value="active" ${o(n.status,"active")}>Active</option>\n      <option value="completed" ${o(n.status,"completed")}>Completed</option>\n    </select>\n    </div>\n    <label for="editPriority" class="select__label name__select3">Priority</label>\n    <div class="select select__edit-container">\n    <select id="editPriority" class="edit__select">\n      <option value="" disabled selected>Select priority</option>\n      <option value="low" ${o(n.priority,"low")}>Low</option>\n      <option value="medium" ${o(n.priority,"medium")}>Medium</option>\n      <option value = "high" ${o(n.priority,"high")}> High</ >\n    </select > \n    </div>\n    <div id="additionalFields"></div>\n    <button onclick="saveChanges(${e})">Save</button>\n  `;const i=document.getElementById("editFormContainer");i.innerHTML="",i.appendChild(a);document.getElementById("editModal").style.display="block",handleDoctorChange(n)}function handleDoctorChange(){const e=document.getElementById("editDoctor").value,t=document.getElementById("additionalFields");t.innerHTML="","Cardiologist"===e?t.innerHTML='\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editAge">\n        <label for="editAge" class="user-label">Age</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editPressure">\n        <label for="editPressure" class="user-label">Normal pressure</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editBMI">\n        <label for="editBMI" class="user-label">Body mass index</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="text" id="editHeartDisease">\n        <label for="editHeartDisease" class="user-label">Past diseases</label>\n      </div>\n    ':"Dentist"===e?t.innerHTML='\n    <label for="editLastVisitDate" class="select__label name__select4">Date of the last visit</label>\n    <div class="input-group">\n      <input required="" name="text" autocomplete="off" class="input edit__date" type="date" id="editLastVisitDate">\n    </div>\n    ':"Therapist"===e&&(t.innerHTML='\n    <div class="input-group">\n      <input required=""  name="text" autocomplete="off" class="input" type="number" id="editAge">\n      <label for="editAge" class="user-label">Age</label>\n    </div>\n    ')}function closeModal(){document.getElementById("editModal").style.display="none";document.querySelector(".edit__form").innerHTML=""}async function saveChanges(e){const t=document.querySelector(".edit__form"),n=document.querySelector(`.card[data-id= "${e}"]`),o=t.querySelector("#editName").value,a=t.querySelector("#editDoctor").value,i=t.querySelector("#editDescription").value,s={name:o,doctor:a,description:i,status:t.querySelector("#editStatus").value,priority:t.querySelector("#editPriority").value};if("Cardiologist"===a){const e=t.querySelector("#editAge").value,n=t.querySelector("#editPressure").value,o=t.querySelector("#editBMI").value,a=t.querySelector("#editHeartDisease").value;s.age=e,s.pulse=n,s.massIndex=o,s.pastDiseases=a}else if("Dentist"===a){const e=t.querySelector("#editLastVisitDate").value;s.lastVisit=e}else if("Therapist"===a){const e=t.querySelector("#editAge").value;s.age=e}await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify(s)});n.innerHTML=`\n  <div class="card__text">\n  <h4>Name:</h4> <p>${o}</p>\n  <h4>Doctor:</h4> <p>${a}</p>\n  <h4>Description:</h4> <p>${i}</p>\n  </div>\n  <div class="button__contianer">\n  <button onclick="showMore(${e})">Show more</button>\n  <button onclick="openEditModal(${e})">Edit</button>\n  </div>\n  <span class="delete-icon" onclick="deleteCard(${e})">&#10006;</span>\n      `,closeModal()}async function showMore(e){const t=await fetch("https://ajax.test-danit.com/api/v2/cards/"+e,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+token}}),n=await t.json(),o=document.getElementById("detailsContainer"),a=document.createElement("div");a.className="details__content";const i=`\n    <h4>Name:</h4> <p> ${n.name}</p>\n    <h4>Doctor: <span>${n.doctor}</span></h4>\n    <h4>Description:</h4> <p> ${n.description}</p>\n    <h4>Priority: <span>${n.priority}</span></h4>\n    <h4>Status: <span>${n.status}</span></h4>\n  `;"Cardiologist"===n.doctor?a.innerHTML=`\n    ${i}\n      <h4>Age: <span>${n.age}</span></h4>\n      <h4>Normalpressure: <span>${n.pulse}</span></h4>\n      <h4>Body mass index: <span>${n.massIndex}</span></h4>\n      <h4>Past diseases:</h4> <p> ${n.pastDiseases}</p>\n    `:"Dentist"===n.doctor?a.innerHTML=`\n    ${i}\n      <h4>Date of the last visit:</h4> <p> ${n.lastVisit}</p>\n    `:"Therapist"===n.doctor&&(a.innerHTML=`\n    ${i}\n    <h4>Age: <span>${n.age}</span></h4>\n    `),o.innerHTML="",o.appendChild(a);document.getElementById("detailsModal").style.display="block"}function closeShowMore(){document.getElementById("detailsModal").style.display="none"}async function filterCards(){const e=document.getElementById("searchInput").value.toLowerCase(),t=document.getElementById("doctorFilter").value,n=document.getElementById("statusFilter").value,o=document.getElementById("priorityFilter").value,a=await fetch("https://ajax.test-danit.com/api/v2/cards",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+token}});(await a.json()).forEach(a=>{const i=document.querySelector(`.card[data-id="${a.id}"]`),s=a.name,l=a.doctor,r=a.status,d=a.priority,c=s?s.toLowerCase():"",u=l||"",p=r?r.toLowerCase():"",m=d?d.toLowerCase():"",y=c.includes(e),h=""===t||u===t,v=""===n||p===n,g=""===o||m===o;i.style.display=y&&v&&g&&h?"":"none"})}getAllCards();
//# sourceMappingURL=../sourcemaps/main.min.js.map
