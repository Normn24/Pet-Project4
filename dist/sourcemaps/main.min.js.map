{"version":3,"sources":["main.js"],"names":["tokenAPI","trueToken","async","getToken","email","password","response","fetch","method","headers","Content-Type","body","JSON","stringify","ok","text","Error","error","alert","message","showHide","enterBtn","document","querySelector","logoutBtn","createVisitBtn","filterPage","header","style","background","height","display","classList","add","remove","login","sessionStorage","getItem","fetchAndDisplayCards","addEventListener","modalForm","emailForm","passwordForm","e","preventDefault","value","form","token","submitForm","target","contains","removeItem","window","location","reload","Authorization","cards","json","innerHTML","forEach","cardData","displayCard","console","statusText","taskBoard","cardContainer","createElement","className","setAttribute","id","name","doctor","description","appendChild","getAllCards","deleteCard","cardId","confirm","openEditModal","optionActive","option","editForm","status","priority","editFormContainer","getElementById","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","newDescription","updatedData","newAge","newPressure","newBMi","newDesease","age","pulse","massIndex","pastDiseases","newDate","lastVisit","showMore","detailsContainer","detailsContent","baseInfo","closeShowMore","filterCards","searchInput","toLowerCase","doctorFilter","statusFilter","priorityFilter","card","cardToRemove","nameElement","doctorElement","statusElement","priorityElement","nameMatch","includes","doctorMatch","statusMatch","priorityMatch"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const tokenAPI = 'https://ajax.test-danit.com/api/v2/cards/login';\r\nlet trueToken;\r\nasync function getToken(email, password) {\r\n  try {\r\n    const response = await fetch(tokenAPI, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const token = await response.text();\r\n      return token;\r\n    } else {\r\n      throw new Error('User is not registered!');\r\n    }\r\n  } catch (error) {\r\n    alert(error.message);\r\n  }\r\n}\r\n\r\nasync function showHide() {\r\n  const enterBtn = document.querySelector('.login-button');\r\n  const logoutBtn = document.querySelector('.logout-button');\r\n  const createVisitBtn = document.querySelector('.create-visit-button');\r\n  const filterPage = document.querySelector(\".filter__section\");\r\n  const header = document.querySelector(\".header\");\r\n\r\n  header.style.background = \"none\";\r\n  header.style.height = \"auto\";\r\n  filterPage.style.display = \"block\";\r\n  enterBtn.classList.add('hidden');\r\n  logoutBtn.classList.remove('hidden');\r\n  createVisitBtn.classList.remove('hidden');\r\n}\r\n\r\nasync function login() {\r\n  const enterBtn = document.querySelector('.login-button');\r\n  const logoutBtn = document.querySelector('.logout-button');\r\n\r\n  if (!sessionStorage.getItem('token')) {\r\n    enterBtn.addEventListener('click', showModal);\r\n  } else {\r\n    showHide();\r\n    await fetchAndDisplayCards();\r\n  }\r\n\r\n  logoutBtn.addEventListener('click', () => {\r\n    sessionStorage.removeItem('token')\r\n    window.location.reload()\r\n  });\r\n\r\n  async function showModal() {\r\n    const modalForm = document.querySelector('#authorization-modal');\r\n    modalForm.style.display = 'block';\r\n\r\n    const emailForm = modalForm.querySelector('input[type=\"email\"]');\r\n    const passwordForm = modalForm.querySelector('input[type=\"password\"]');\r\n    const btnForm = modalForm.querySelector('.send-button');\r\n\r\n    btnForm.addEventListener('click', handleSubmit);\r\n\r\n    modalForm.addEventListener('click', (e) => {\r\n      if (e.target.classList.contains('modal') || e.target.classList.contains('btn-close')) {\r\n        modalForm.style.display = 'none';\r\n        emailForm.value = '';\r\n        passwordForm.value = '';\r\n      }\r\n    });\r\n\r\n    async function handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (emailForm.value && passwordForm.value) {\r\n        submitForm(modalForm, emailForm.value, passwordForm.value);\r\n      } else {\r\n        alert('Fill in all fields!');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  async function submitForm(form, email, password) {\r\n    const token = await getToken(email, password);\r\n    sessionStorage.token = token;\r\n\r\n    if (token) {\r\n      showHide();\r\n      form.style.display = 'none';\r\n      trueToken = token;\r\n      await fetchAndDisplayCards();\r\n    }\r\n\r\n    return token;\r\n  }\r\n}\r\n\r\nasync function fetchAndDisplayCards() {\r\n  const token = sessionStorage.getItem('token');\r\n\r\n  if (token) {\r\n    try {\r\n      const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const cards = await response.json();\r\n\r\n        const taskBoard = document.querySelector(\"#taskBoard\");\r\n        taskBoard.innerHTML = \"\";\r\n\r\n        cards.forEach(async (cardData) => {\r\n          await displayCard(cardData);\r\n        });\r\n      } else {\r\n        console.error(\"Error fetching cards:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching cards:\", error);\r\n    }\r\n  }\r\n}\r\n\r\nlogin();\r\n\r\nasync function displayCard(cardData) {\r\n  const taskBoard = document.querySelector(\"#taskBoard\");\r\n  const cardContainer = document.createElement(\"div\");\r\n\r\n  cardContainer.className = \"card\";\r\n  cardContainer.setAttribute(\"data-id\", cardData.id);\r\n\r\n  cardContainer.innerHTML = `\r\n      <div class=\"card__text\">\r\n      <h4>Name:</h4> <p>${cardData.name}</p>\r\n      <h4>Doctor:</h4> <p>${cardData.doctor}</p>\r\n      <h4>Description:</h4> <p>${cardData.description}</p>\r\n      </div>\r\n      <div class=\"button__contianer\">\r\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\r\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\r\n      </div>\r\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\r\n    `;\r\n\r\n  taskBoard.appendChild(cardContainer);\r\n}\r\n\r\nasync function getAllCards() {\r\n  const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(async (cardData) => {\r\n    await displayCard(cardData);\r\n  });\r\n}\r\n\r\n\r\n\r\nasync function deleteCard(cardId) {\r\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\r\n\r\n  if (confirmation) {\r\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n      cardToRemove.remove();\r\n    } else {\r\n      console.error(\"Error to delete:\", response.statusText);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function openEditModal(cardId) {\r\n  const token = sessionStorage.getItem('token');\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  const optionActive = (value, option) => value === option ? \"selected\" : \"\";\r\n\r\n  const editForm = document.createElement(\"div\");\r\n  editForm.className = \"edit__form\";\r\n  editForm.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"${cards.name}\">\r\n      <label for=\"editName\" class=\"user-label\">Name</label>\r\n    </div>\r\n    <div class=\"select select__edit-container\">\r\n    <label for=\"editDoctor\" class=\"select__label\">Doctor</label>\r\n    <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\r\n    <option value=\"Cardiologist\" ${optionActive(cards.doctor, \"Cardiologist\")}>Cardiologist</option>\r\n    <option value=\"Dentist\"  ${optionActive(cards.doctor, \"Dentist\")}>Dentist</option>\r\n    <option value=\"Therapist\"  ${optionActive(cards.doctor, \"Therapist\")}>Therapist</option>\r\n    </select>\r\n    </div>\r\n    <div class=\"input-group\">\r\n    <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"${cards.description}\">\r\n    <label for=\"editDescription\" class=\"user-label\">Description</label>\r\n  </div>\r\n    \r\n  <div class=\"select select__edit-container\">\r\n  <label for=\"editStatus\" class=\"select__label\">Status</label>\r\n    <select id=\"editStatus\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select status</option>\r\n      <option value=\"active\" ${optionActive(cards.status, \"active\")}>Active</option>\r\n      <option value=\"completed\" ${optionActive(cards.status, \"completed\")}>Completed</option>\r\n    </select>\r\n    </div>\r\n    <div class=\"select select__edit-container\">\r\n    <label for=\"editPriority\" class=\"select__label \">Priority</label>\r\n    <select id=\"editPriority\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select priority</option>\r\n      <option value=\"low\" ${optionActive(cards.priority, \"low\")}>Low</option>\r\n      <option value=\"medium\" ${optionActive(cards.priority, \"medium\")}>Medium</option>\r\n      <option value = \"high\" ${optionActive(cards.priority, \"high\")}> High</ >\r\n    </select > \r\n    </div>\r\n    <div id=\"additionalFields\"></div>\r\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\r\n  `;\r\n\r\n  const editFormContainer = document.getElementById(\"editFormContainer\");\r\n  editFormContainer.innerHTML = \"\";\r\n  editFormContainer.appendChild(editForm);\r\n\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"block\";\r\n  handleDoctorChange(cards);\r\n}\r\n\r\nfunction handleDoctorChange() {\r\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\r\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\r\n\r\n  additionalFieldsContainer.innerHTML = \"\";\r\n\r\n  if (selectedDoctor === 'Cardiologist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n        <label for=\"editAge\" class=\"user-label\">Age</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editPressure\">\r\n        <label for=\"editPressure\" class=\"user-label\">Normal pressure</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editBMI\">\r\n        <label for=\"editBMI\" class=\"user-label\">Body mass index</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"text\" id=\"editHeartDisease\">\r\n        <label for=\"editHeartDisease\" class=\"user-label\">Past diseases</label>\r\n      </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Dentist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <div class=\"input-group\">\r\n    <label for=\"editLastVisitDate\" class=\"select__label\">Date of the last visit</label>\r\n      <input required=\"\" name=\"text\" autocomplete=\"off\" class=\"input edit__date\" type=\"date\" id=\"editLastVisitDate\">\r\n    </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Therapist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n      <label for=\"editAge\" class=\"user-label\">Age</label>\r\n    </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction closeModal() {\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"none\";\r\n  const editForm = document.querySelector(\".edit__form\")\r\n  editForm.innerHTML = \"\";\r\n}\r\n\r\nasync function saveChanges(cardId) {\r\n  const token = sessionStorage.getItem('token');\r\n  const editForm = document.querySelector(\".edit__form\")\r\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\r\n  const newName = editForm.querySelector(\"#editName\").value;\r\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\r\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\r\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\r\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\r\n\r\n  const updatedData = {\r\n    name: newName,\r\n    doctor: newDoctor,\r\n    description: newDescription,\r\n    status: newStatus,\r\n    priority: newPriority\r\n  };\r\n\r\n  if (newDoctor === \"Cardiologist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    const newPressure = editForm.querySelector(\"#editPressure\").value;\r\n    const newBMi = editForm.querySelector(\"#editBMI\").value;\r\n    const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\r\n    updatedData.age = newAge;\r\n    updatedData.pulse = newPressure;\r\n    updatedData.massIndex = newBMi;\r\n    updatedData.pastDiseases = newDesease;\r\n  } else if (newDoctor === \"Dentist\") {\r\n    const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\r\n    updatedData.lastVisit = newDate;\r\n  } else if (newDoctor === \"Therapist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    updatedData.age = newAge;\r\n  }\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(updatedData)\r\n  });\r\n\r\n  cardContainer.innerHTML = `\r\n  <div class=\"card__text\">\r\n  <h4>Name:</h4> <p>${newName}</p>\r\n  <h4>Doctor:</h4> <p>${newDoctor}</p>\r\n  <h4>Description:</h4> <p>${newDescription}</p>\r\n  </div>\r\n  <div class=\"button__contianer\">\r\n  <button onclick=\"showMore(${cardId})\">Show more</button>\r\n  <button onclick=\"openEditModal(${cardId})\">Edit</button>\r\n  </div>\r\n  <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\r\n      `;\r\n\r\n  closeModal();\r\n}\r\n\r\nasync function showMore(cardId) {\r\n  const token = sessionStorage.getItem('token');\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cardData = await response.json();\r\n\r\n  const detailsContainer = document.getElementById(\"detailsContainer\");\r\n  const detailsContent = document.createElement(\"div\");\r\n\r\n  detailsContent.className = \"details__content\";\r\n  const baseInfo = `\r\n    <h4>Name: <span>${cardData.name}</span></h4>\r\n    <h4>Doctor: <span>${cardData.doctor}</span></h4>\r\n    <h4>Description: <span>${cardData.description}</span></h4>\r\n    <h4>Priority: <span>${cardData.priority}</span></h4>\r\n    <h4>Status: <span>${cardData.status}</span></h4>\r\n  `;\r\n\r\n  if (cardData.doctor === 'Cardiologist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Age: <span>${cardData.age}</span></h4>\r\n      <h4>Normalpressure: <span>${cardData.pulse}</span></h4>\r\n      <h4>Body mass index: <span>${cardData.massIndex}</span></h4>\r\n      <h4>Past diseases: <span>${cardData.pastDiseases}</span></h4>\r\n    `;\r\n  } else if (cardData.doctor === 'Dentist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Date of the last visit:</h4> <p> ${cardData.lastVisit}</p>\r\n    `;\r\n  } else if (cardData.doctor === 'Therapist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n    <h4>Age: <span>${cardData.age}</span></h4>\r\n    `;\r\n  }\r\n\r\n  detailsContainer.innerHTML = \"\";\r\n  detailsContainer.appendChild(detailsContent);\r\n\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"block\";\r\n}\r\n\r\nfunction closeShowMore() {\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"none\";\r\n}\r\n\r\nasync function filterCards() {\r\n  const token = sessionStorage.getItem('token');\r\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\r\n  const doctorFilter = document.getElementById(\"doctorFilter\").value;\r\n  const statusFilter = document.getElementById(\"statusFilter\").value;\r\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(card => {\r\n    const cardToRemove = document.querySelector(`.card[data-id=\"${card.id}\"]`);\r\n    const nameElement = card.name;\r\n    const doctorElement = card.doctor;\r\n    const statusElement = card.status;\r\n    const priorityElement = card.priority;\r\n\r\n    const name = nameElement ? nameElement.toLowerCase() : \"\";\r\n    const doctor = doctorElement ? doctorElement : \"\";\r\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\r\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\r\n\r\n    const nameMatch = name.includes(searchInput);\r\n    const doctorMatch = (doctorFilter === '' || doctor === doctorFilter);\r\n    const statusMatch = (statusFilter === '' || status === statusFilter);\r\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\r\n\r\n    if (nameMatch && statusMatch && priorityMatch && doctorMatch) {\r\n      cardToRemove.style.display = \"\";\r\n    } else {\r\n      cardToRemove.style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n"]}