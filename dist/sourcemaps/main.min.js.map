{"version":3,"sources":["main.js"],"names":["tokenAPI","trueToken","async","getToken","email","password","response","fetch","method","headers","Content-Type","body","JSON","stringify","ok","text","Error","error","alert","message","showHide","enterBtn","document","querySelector","logoutBtn","createVisitBtn","classList","add","remove","login","sessionStorage","getItem","addEventListener","modalForm","style","display","emailForm","passwordForm","e","preventDefault","value","form","token","submitForm","target","contains","removeItem","window","location","reload","displayCard","cardData","taskBoard","cardContainer","createElement","className","setAttribute","id","innerHTML","name","doctor","description","appendChild","getAllCards","Authorization","json","forEach","deleteCard","cardId","confirm","console","statusText","openEditModal","cards","optionActive","option","editForm","status","priority","editFormContainer","getElementById","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","newDescription","updatedData","newAge","newPressure","newBMi","newDesease","age","pulse","massIndex","pastDiseases","newDate","lastVisit","showMore","detailsContainer","detailsContent","baseInfo","closeShowMore","filterCards","searchInput","toLowerCase","doctorFilter","statusFilter","priorityFilter","card","cardToRemove","nameElement","doctorElement","statusElement","priorityElement","nameMatch","includes","doctorMatch","statusMatch","priorityMatch"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const tokenAPI = 'https://ajax.test-danit.com/api/v2/cards/login';\r\nlet trueToken;\r\nasync function getToken(email, password) {\r\n  try {\r\n    const response = await fetch(tokenAPI, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const token = await response.text();\r\n      return token;\r\n    } else {\r\n      throw new Error('User is not registered!');\r\n    }\r\n  } catch (error) {\r\n    alert(error.message);\r\n  }\r\n}\r\n\r\nasync function showHide() {\r\n  const enterBtn = document.querySelector('.login-button');\r\n  const logoutBtn = document.querySelector('.logout-button');\r\n  const createVisitBtn = document.querySelector('.create-visit-button');\r\n  const filterPage = document.querySelector(\".filter__section\");\r\n\r\n\r\n  enterBtn.classList.add('hidden');\r\n  logoutBtn.classList.remove('hidden');\r\n  createVisitBtn.classList.remove('hidden');\r\n}\r\n\r\nasync function login() {\r\n  const enterBtn = document.querySelector('.login-button');\r\n  const logoutBtn = document.querySelector('.logout-button');\r\n\r\n  if (!sessionStorage.getItem('token')) {\r\n    enterBtn.addEventListener('click', showModal);\r\n  } else {\r\n    showHide();\r\n  }\r\n\r\n  logoutBtn.addEventListener('click', () => {\r\n    sessionStorage.removeItem('token')\r\n    window.location.reload()\r\n  });\r\n\r\n  async function showModal() {\r\n    const modalForm = document.querySelector('#authorization-modal');\r\n    modalForm.style.display = 'block';\r\n\r\n    const emailForm = modalForm.querySelector('input[type=\"email\"]');\r\n    const passwordForm = modalForm.querySelector('input[type=\"password\"]');\r\n    const btnForm = modalForm.querySelector('.send-button');\r\n\r\n    btnForm.addEventListener('click', handleSubmit);\r\n\r\n    modalForm.addEventListener('click', (e) => {\r\n      if (e.target.classList.contains('modal') || e.target.classList.contains('btn-close')) {\r\n        modalForm.style.display = 'none';\r\n        emailForm.value = '';\r\n        passwordForm.value = '';\r\n      }\r\n    });\r\n\r\n    async function handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (emailForm.value && passwordForm.value) {\r\n        submitForm(modalForm, emailForm.value, passwordForm.value);\r\n      } else {\r\n        alert('Fill in all fields!');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  async function submitForm(form, email, password) {\r\n    const token = await getToken(email, password);\r\n    sessionStorage.token = token;\r\n\r\n    if (token) {\r\n      showHide();\r\n      form.style.display = 'none';\r\n    }\r\n    trueToken = token;\r\n\r\n    return token;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nlogin();\r\n\r\nconst token = sessionStorage.getItem('token');\r\n\r\n\r\nasync function displayCard(cardData) {\r\n  const taskBoard = document.querySelector(\"#taskBoard\");\r\n  const cardContainer = document.createElement(\"div\");\r\n\r\n  cardContainer.className = \"card\";\r\n  cardContainer.setAttribute(\"data-id\", cardData.id);\r\n\r\n  cardContainer.innerHTML = `\r\n      <div class=\"card__text\">\r\n      <h4>Name:</h4> <p>${cardData.name}</p>\r\n      <h4>Doctor:</h4> <p>${cardData.doctor}</p>\r\n      <h4>Description:</h4> <p>${cardData.description}</p>\r\n      </div>\r\n      <div class=\"button__contianer\">\r\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\r\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\r\n      </div>\r\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\r\n    `;\r\n\r\n  taskBoard.appendChild(cardContainer);\r\n}\r\n\r\nasync function getAllCards() {\r\n  const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(async (cardData) => {\r\n    await displayCard(cardData);\r\n  });\r\n}\r\n\r\ngetAllCards();\r\n\r\nasync function deleteCard(cardId) {\r\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\r\n\r\n  if (confirmation) {\r\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n      cardToRemove.remove();\r\n    } else {\r\n      console.error(\"Error to delete:\", response.statusText);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function openEditModal(cardId) {\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  const optionActive = (value, option) => value === option ? \"selected\" : \"\";\r\n\r\n  const editForm = document.createElement(\"div\");\r\n  editForm.className = \"edit__form\";\r\n  editForm.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"${cards.name}\">\r\n      <label for=\"editName\" class=\"user-label\">Name</label>\r\n    </div>\r\n    <label for=\"editDoctor\" class=\"select__label name__select1\">Doctor</label>\r\n    <div class=\"select select__edit-container\">\r\n    <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\r\n    <option value=\"Cardiologist\" ${optionActive(cards.doctor, \"Cardiologist\")}>Cardiologist</option>\r\n    <option value=\"Dentist\"  ${optionActive(cards.doctor, \"Dentist\")}>Dentist</option>\r\n    <option value=\"Therapist\"  ${optionActive(cards.doctor, \"Therapist\")}>Therapist</option>\r\n    </select>\r\n    </div>\r\n    <div class=\"input-group\">\r\n    <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"${cards.description}\">\r\n    <label for=\"editDescription\" class=\"user-label\">Description</label>\r\n  </div>\r\n    \r\n    <label for=\"editStatus\" class=\"select__label name__select2\">Status</label>\r\n    <div class=\"select select__edit-container\">\r\n    <select id=\"editStatus\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select status</option>\r\n      <option value=\"active\" ${optionActive(cards.status, \"active\")}>Active</option>\r\n      <option value=\"completed\" ${optionActive(cards.status, \"completed\")}>Completed</option>\r\n    </select>\r\n    </div>\r\n    <label for=\"editPriority\" class=\"select__label name__select3\">Priority</label>\r\n    <div class=\"select select__edit-container\">\r\n    <select id=\"editPriority\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select priority</option>\r\n      <option value=\"low\" ${optionActive(cards.priority, \"low\")}>Low</option>\r\n      <option value=\"medium\" ${optionActive(cards.priority, \"medium\")}>Medium</option>\r\n      <option value = \"high\" ${optionActive(cards.priority, \"high\")}> High</ >\r\n    </select > \r\n    </div>\r\n    <div id=\"additionalFields\"></div>\r\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\r\n  `;\r\n\r\n  const editFormContainer = document.getElementById(\"editFormContainer\");\r\n  editFormContainer.innerHTML = \"\";\r\n  editFormContainer.appendChild(editForm);\r\n\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"block\";\r\n  handleDoctorChange(cards);\r\n}\r\n\r\nfunction handleDoctorChange() {\r\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\r\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\r\n\r\n  additionalFieldsContainer.innerHTML = \"\";\r\n\r\n  if (selectedDoctor === 'Cardiologist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n        <label for=\"editAge\" class=\"user-label\">Age</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editPressure\">\r\n        <label for=\"editPressure\" class=\"user-label\">Normal pressure</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editBMI\">\r\n        <label for=\"editBMI\" class=\"user-label\">Body mass index</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"text\" id=\"editHeartDisease\">\r\n        <label for=\"editHeartDisease\" class=\"user-label\">Past diseases</label>\r\n      </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Dentist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <label for=\"editLastVisitDate\" class=\"select__label name__select4\">Date of the last visit</label>\r\n    <div class=\"input-group\">\r\n      <input required=\"\" name=\"text\" autocomplete=\"off\" class=\"input edit__date\" type=\"date\" id=\"editLastVisitDate\">\r\n    </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Therapist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n      <label for=\"editAge\" class=\"user-label\">Age</label>\r\n    </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction closeModal() {\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"none\";\r\n  const editForm = document.querySelector(\".edit__form\")\r\n  editForm.innerHTML = \"\";\r\n}\r\n\r\nasync function saveChanges(cardId) {\r\n  const editForm = document.querySelector(\".edit__form\")\r\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\r\n  const newName = editForm.querySelector(\"#editName\").value;\r\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\r\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\r\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\r\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\r\n\r\n  const updatedData = {\r\n    name: newName,\r\n    doctor: newDoctor,\r\n    description: newDescription,\r\n    status: newStatus,\r\n    priority: newPriority\r\n  };\r\n\r\n  if (newDoctor === \"Cardiologist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    const newPressure = editForm.querySelector(\"#editPressure\").value;\r\n    const newBMi = editForm.querySelector(\"#editBMI\").value;\r\n    const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\r\n    updatedData.age = newAge;\r\n    updatedData.pulse = newPressure;\r\n    updatedData.massIndex = newBMi;\r\n    updatedData.pastDiseases = newDesease;\r\n  } else if (newDoctor === \"Dentist\") {\r\n    const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\r\n    updatedData.lastVisit = newDate;\r\n  } else if (newDoctor === \"Therapist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    updatedData.age = newAge;\r\n  }\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(updatedData)\r\n  });\r\n\r\n  cardContainer.innerHTML = `\r\n  <div class=\"card__text\">\r\n  <h4>Name:</h4> <p>${newName}</p>\r\n  <h4>Doctor:</h4> <p>${newDoctor}</p>\r\n  <h4>Description:</h4> <p>${newDescription}</p>\r\n  </div>\r\n  <div class=\"button__contianer\">\r\n  <button onclick=\"showMore(${cardId})\">Show more</button>\r\n  <button onclick=\"openEditModal(${cardId})\">Edit</button>\r\n  </div>\r\n  <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\r\n      `;\r\n\r\n  closeModal();\r\n}\r\n\r\nasync function showMore(cardId) {\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cardData = await response.json();\r\n\r\n  const detailsContainer = document.getElementById(\"detailsContainer\");\r\n  const detailsContent = document.createElement(\"div\");\r\n\r\n  detailsContent.className = \"details__content\";\r\n  const baseInfo = `\r\n    <h4>Name:</h4> <p> ${cardData.name}</p>\r\n    <h4>Doctor: <span>${cardData.doctor}</span></h4>\r\n    <h4>Description:</h4> <p> ${cardData.description}</p>\r\n    <h4>Priority: <span>${cardData.priority}</span></h4>\r\n    <h4>Status: <span>${cardData.status}</span></h4>\r\n  `;\r\n\r\n  if (cardData.doctor === 'Cardiologist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Age: <span>${cardData.age}</span></h4>\r\n      <h4>Normalpressure: <span>${cardData.pulse}</span></h4>\r\n      <h4>Body mass index: <span>${cardData.massIndex}</span></h4>\r\n      <h4>Past diseases:</h4> <p> ${cardData.pastDiseases}</p>\r\n    `;\r\n  } else if (cardData.doctor === 'Dentist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Date of the last visit:</h4> <p> ${cardData.lastVisit}</p>\r\n    `;\r\n  } else if (cardData.doctor === 'Therapist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n    <h4>Age: <span>${cardData.age}</span></h4>\r\n    `;\r\n  }\r\n\r\n  detailsContainer.innerHTML = \"\";\r\n  detailsContainer.appendChild(detailsContent);\r\n\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"block\";\r\n}\r\n\r\nfunction closeShowMore() {\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"none\";\r\n}\r\n\r\nasync function filterCards() {\r\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\r\n  const doctorFilter = document.getElementById(\"doctorFilter\").value;\r\n  const statusFilter = document.getElementById(\"statusFilter\").value;\r\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(card => {\r\n    const cardToRemove = document.querySelector(`.card[data-id=\"${card.id}\"]`);\r\n    const nameElement = card.name;\r\n    const doctorElement = card.doctor;\r\n    const statusElement = card.status;\r\n    const priorityElement = card.priority;\r\n\r\n    const name = nameElement ? nameElement.toLowerCase() : \"\";\r\n    const doctor = doctorElement ? doctorElement : \"\";\r\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\r\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\r\n\r\n    const nameMatch = name.includes(searchInput);\r\n    const doctorMatch = (doctorFilter === '' || doctor === doctorFilter);\r\n    const statusMatch = (statusFilter === '' || status === statusFilter);\r\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\r\n\r\n    if (nameMatch && statusMatch && priorityMatch && doctorMatch) {\r\n      cardToRemove.style.display = \"\";\r\n    } else {\r\n      cardToRemove.style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n"]}