{"version":3,"sources":["main.js","01_main.js"],"names":["tokenAPI","async","getToken","email","password","response","fetch","method","headers","Content-Type","body","JSON","stringify","ok","text","Error","error","alert","message","showHide","enterBtn","document","querySelector","logoutBtn","createVisitBtn","classList","add","remove","login","sessionStorage","getItem","addEventListener","modalForm","style","display","emailForm","passwordForm","e","preventDefault","value","form","token","submitForm","target","contains","removeItem","window","location","reload"],"mappings":"AAAA,MAAMA,SAAW,iDAEjBC,eAAeC,SAASC,EAAOC,GAC3B,IACI,MAAMC,QAAiBC,MAAMN,SAAU,CACnCO,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBT,MAAOA,EACPC,SAAUA,MAIlB,GAAIC,EAASQ,GACT,OAAOR,EAASS,OAEhB,MAAM,IAAIC,MAAM,2BAEtB,MAAOC,GACLC,MAAMD,EAAME,UAIpBjB,eAAekB,WACX,MAAMC,EAAWC,SAASC,cAAc,iBAClCC,EAAYF,SAASC,cAAc,kBACnCE,EAAiBH,SAASC,cAAc,wBAE9CF,EAASK,UAAUC,IAAI,UACvBH,EAAUE,UAAUE,OAAO,UAC3BH,EAAeC,UAAUE,OAAO,UAGpC1B,eAAe2B,QACX,MAAMR,EAAWC,SAASC,cAAc,iBAClCC,EAAYF,SAASC,cAAc,kBAEpCO,eAAeC,QAAQ,SAGxBX,WAFAC,EAASW,iBAAiB,SAU9B9B,iBACI,MAAM+B,EAAYX,SAASC,cAAc,wBACzCU,EAAUC,MAAMC,QAAU,QAE1B,MAAMC,EAAYH,EAAUV,cAAc,uBACpCc,EAAeJ,EAAUV,cAAc,0BAC7BU,EAAUV,cAAc,gBAEhCS,iBAAiB,SAUzB9B,eAA4BoC,GACxBA,EAAEC,iBACEH,EAAUI,OAASH,EAAaG,MAQ5CtC,eAA0BuC,EAAMrC,EAAOC,GACnC,MAAMqC,QAAcvC,SAASC,EAAOC,GACpCyB,eAAeY,MAAQA,EAEnBA,IACAtB,WACAqB,EAAKP,MAAMC,QAAU,QAbjBQ,CAAWV,EAAWG,EAAUI,MAAOH,EAAaG,OAEpDtB,MAAM,0BAbde,EAAUD,iBAAiB,QAAUM,KAC7BA,EAAEM,OAAOlB,UAAUmB,SAAS,UAAYP,EAAEM,OAAOlB,UAAUmB,SAAS,gBACpEZ,EAAUC,MAAMC,QAAU,OAC1BC,EAAUI,MAAQ,GAClBH,EAAaG,MAAQ,SAnBjChB,EAAUQ,iBAAiB,QAAS,KAChCF,eAAegB,WAAW,SAC1BC,OAAOC,SAASC,WA0CxBpB;ACzFA","file":"../js/main.min.js","sourcesContent":["const tokenAPI = 'https://ajax.test-danit.com/api/v2/cards/login';\n\nasync function getToken(email, password) {\n    try {\n        const response = await fetch(tokenAPI, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password,\n            }),\n        });\n\n        if (response.ok) {\n            return response.text();\n        } else {\n            throw new Error('User is not registered!');\n        }\n    } catch (error) {\n        alert(error.message);\n    }\n}\n\nasync function showHide() {\n    const enterBtn = document.querySelector('.login-button');\n    const logoutBtn = document.querySelector('.logout-button');\n    const createVisitBtn = document.querySelector('.create-visit-button');\n\n    enterBtn.classList.add('hidden');\n    logoutBtn.classList.remove('hidden');\n    createVisitBtn.classList.remove('hidden');  \n}\n\nasync function login() {\n    const enterBtn = document.querySelector('.login-button');\n    const logoutBtn = document.querySelector('.logout-button');\n\n    if (!sessionStorage.getItem('token')) {\n        enterBtn.addEventListener('click', showModal);\n    } else {\n        showHide();\n    }\n\n    logoutBtn.addEventListener('click', () => {\n        sessionStorage.removeItem('token')\n        window.location.reload()\n    });\n\n    async function showModal() {\n        const modalForm = document.querySelector('#authorization-modal');\n        modalForm.style.display = 'block';\n\n        const emailForm = modalForm.querySelector('input[type=\"email\"]');\n        const passwordForm = modalForm.querySelector('input[type=\"password\"]');\n        const btnForm = modalForm.querySelector('.send-button');\n\n        btnForm.addEventListener('click', handleSubmit);\n\n        modalForm.addEventListener('click', (e) => {\n            if (e.target.classList.contains('modal') || e.target.classList.contains('btn-close')) {\n                modalForm.style.display = 'none';\n                emailForm.value = '';\n                passwordForm.value = '';\n            }\n        });\n\n        async function handleSubmit(e) {\n            e.preventDefault();\n            if (emailForm.value && passwordForm.value) {\n                submitForm(modalForm, emailForm.value, passwordForm.value);\n            } else {\n                alert('Fill in all fields!');\n            }\n        }\n    }\n\n    async function submitForm(form, email, password) {\n        const token = await getToken(email, password);\n        sessionStorage.token = token;\n\n        if (token) {\n            showHide();\n            form.style.display = 'none';\n        }\n    }\n}\n\nlogin();",""]}