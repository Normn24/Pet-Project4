{"version":3,"sources":["main.js"],"names":["token","displayCard","cardData","taskBoard","document","querySelector","cardContainer","createElement","className","setAttribute","id","status","priority","innerHTML","name","doctor","appendChild","getAllCards","fetch","headers","Content-Type","Authorization","then","response","json","cards","forEach","catch","error","console","deleteCard","cardId","confirm","method","ok","remove","statusText","editCard","innerText","split","editForm","saveChanges","newName","value","newDoctor","updatedData","body","JSON","stringify","showMore","description","title","filterCards","searchInput","getElementById","toLowerCase","statusFilter","priorityFilter","querySelectorAll","card","nameElement","statusElement","getAttribute","priorityElement","nameMatch","includes","statusMatch","priorityMatch","style","display"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["// Authorization: `Bearer ${token}`\r\n// Search, Status, priorety, modal window, Edit(Put, Patch) \r\n\r\nconst token = \"6b6edd59-d784-4e87-a1cb-342f6158ace1\";\r\n\r\n// fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n//   method: 'POST',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     'Authorization': `Bearer ${token}`\r\n//   },\r\n//   body: JSON.stringify({\r\n//     // name: 'Білий Рома',\r\n//     // name: 'Кіндер Андрій',\r\n//     name: 'Лисак Влад',\r\n//     title: 'Визит к кардиологу',\r\n//     description: 'Плановый визит',\r\n//     doctor: 'Cardiologist',\r\n//     bp: '24',\r\n//     age: 23,\r\n//     weight: 70,\r\n//     status: \"Active\",\r\n//     // status: \"Completed\",\r\n//     // priority: \"low\",\r\n//     // priority: \"medium\",\r\n//     priority: \"high\",\r\n//   })\r\n// })\r\n//   .then(response => response.json())\r\n//   .then(response => console.log(response))\r\n\r\nfunction displayCard(cardData) {\r\n  const taskBoard = document.querySelector(\"#taskBoard\");\r\n  const cardContainer = document.createElement(\"div\");\r\n  cardContainer.className = \"card\";\r\n  cardContainer.setAttribute(\"data-id\", cardData.id);\r\n  cardContainer.setAttribute('data-status', cardData.status);\r\n  cardContainer.setAttribute('data-priority', cardData.priority);\r\n\r\n  cardContainer.innerHTML = `\r\n      <p>Name: ${cardData.name}</p>\r\n      <p>Doctor: ${cardData.doctor}</p>\r\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\r\n      <button onclick=\"editCard(${cardData.id})\">Edit</button>\r\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\r\n    `;\r\n\r\n  taskBoard.appendChild(cardContainer);\r\n}\r\n\r\nfunction getAllCards() {\r\n  fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n    .then(cards => {\r\n      cards.forEach(cardData => {\r\n        displayCard(cardData);\r\n      });\r\n    })\r\n    .catch(error => console.error(\"Error:\", error));\r\n}\r\n\r\ngetAllCards();\r\n\r\nfunction deleteCard(cardId) {\r\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\r\n\r\n  if (confirmation) {\r\n    fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n          cardToRemove.remove();\r\n        } else {\r\n          console.error(\"Error to delete:\", response.statusText);\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  }\r\n}\r\n\r\nfunction editCard(cardId) {\r\n  const cardContainer = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n\r\n  const name = cardContainer.querySelector('p:first-child').innerText.split(': ')[1];\r\n  const doctor = cardContainer.querySelector('p:nth-child(2)').innerText.split(': ')[1];\r\n\r\n  const editForm = document.createElement(\"div\");\r\n  editForm.className = \"edit-form\";\r\n  editForm.innerHTML = `\r\n    <label for=\"editName\">Name:</label>\r\n    <input type=\"text\" id=\"editName\" value=\"${name}\">\r\n    <label for=\"editDoctor\">Doctor:</label>\r\n    <input type=\"text\" id=\"editDoctor\" value=\"${doctor}\">\r\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\r\n  `;\r\n\r\n  cardContainer.innerHTML = \"\";\r\n  cardContainer.appendChild(editForm);\r\n}\r\n\r\nfunction saveChanges(cardId) {\r\n  const cardContainer = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n  const editForm = cardContainer.querySelector('.edit-form');\r\n\r\n  const newName = editForm.querySelector('#editName').value;\r\n  const newDoctor = editForm.querySelector('#editDoctor').value;\r\n\r\n  const updatedData = {\r\n    name: newName,\r\n    doctor: newDoctor\r\n  };\r\n\r\n  fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(updatedData)\r\n  })\r\n    .then(response => response.json())\r\n\r\n\r\n  cardContainer.innerHTML = `\r\n    <p>Name: ${newName}</p>\r\n    <p>Doctor: ${newDoctor}</p>\r\n    <button onclick=\"showMore(${cardId})\">Show more</button>\r\n    <button onclick=\"editCard(${cardId})\">Edit</button>\r\n    <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\r\n  `;\r\n}\r\n\r\nfunction showMore(cardId) {\r\n  const cardContainer = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n\r\n  fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n    .then(cardData => {\r\n      cardContainer.innerHTML += `\r\n        <p>Some text: ${cardData.description}</p>\r\n        <p>Some text: ${cardData.title}</p>\r\n      `;\r\n    })\r\n    .catch(error => console.error(\"Error:\", error));\r\n}\r\n\r\n\r\nfunction filterCards() {\r\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\r\n  const statusFilter = document.getElementById(\"statusFilter\").value;\r\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\r\n  const cards = document.querySelectorAll(\".card\");\r\n\r\n  cards.forEach(card => {\r\n    const nameElement = card.querySelector('p:first-child');\r\n    const statusElement = card.getAttribute('data-status');\r\n    const priorityElement = card.getAttribute('data-priority');\r\n\r\n    const name = nameElement ? nameElement.innerText.split(': ')[1].toLowerCase() : \"\";\r\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\r\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\r\n\r\n    const nameMatch = name.includes(searchInput);\r\n    const statusMatch = (statusFilter === '' || status === statusFilter);\r\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\r\n\r\n    if (nameMatch && statusMatch && priorityMatch) {\r\n      card.style.display = \"\";\r\n    } else {\r\n      card.style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n"]}