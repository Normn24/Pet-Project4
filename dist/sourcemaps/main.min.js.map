{"version":3,"sources":["main.js"],"names":["tokenAPI","trueToken","async","getToken","email","password","response","fetch","method","headers","Content-Type","body","JSON","stringify","ok","text","Error","error","alert","message","showHide","enterBtn","document","querySelector","logoutBtn","createVisitBtn","classList","add","remove","login","sessionStorage","getItem","fetchAndDisplayCards","addEventListener","modalForm","style","display","emailForm","passwordForm","e","preventDefault","value","form","token","submitForm","target","contains","removeItem","window","location","reload","Authorization","cards","json","innerHTML","forEach","cardData","displayCard","console","statusText","taskBoard","cardContainer","createElement","className","setAttribute","id","name","doctor","description","appendChild","getAllCards","deleteCard","cardId","confirm","openEditModal","optionActive","option","editForm","status","priority","editFormContainer","getElementById","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","newDescription","updatedData","newAge","newPressure","newBMi","newDesease","age","pulse","massIndex","pastDiseases","newDate","lastVisit","showMore","detailsContainer","detailsContent","baseInfo","closeShowMore","filterCards","searchInput","toLowerCase","doctorFilter","statusFilter","priorityFilter","card","cardToRemove","nameElement","doctorElement","statusElement","priorityElement","nameMatch","includes","doctorMatch","statusMatch","priorityMatch"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const tokenAPI = 'https://ajax.test-danit.com/api/v2/cards/login';\nlet trueToken;\nasync function getToken(email, password) {\n  try {\n    const response = await fetch(tokenAPI, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    });\n\n    if (response.ok) {\n      const token = await response.text();\n      return token;\n    } else {\n      throw new Error('User is not registered!');\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nasync function showHide() {\n  const enterBtn = document.querySelector('.login-button');\n  const logoutBtn = document.querySelector('.logout-button');\n  const createVisitBtn = document.querySelector('.create-visit-button');\n  const filterPage = document.querySelector(\".filter__section\");\n\n\n  enterBtn.classList.add('hidden');\n  logoutBtn.classList.remove('hidden');\n  createVisitBtn.classList.remove('hidden');\n}\n\nasync function login() {\n  const enterBtn = document.querySelector('.login-button');\n  const logoutBtn = document.querySelector('.logout-button');\n\n  if (!sessionStorage.getItem('token')) {\n    enterBtn.addEventListener('click', showModal);\n  } else {\n    showHide();\n    await fetchAndDisplayCards();\n  }\n\n  logoutBtn.addEventListener('click', () => {\n    sessionStorage.removeItem('token')\n    window.location.reload()\n  });\n\n  async function showModal() {\n    const modalForm = document.querySelector('#authorization-modal');\n    modalForm.style.display = 'block';\n\n    const emailForm = modalForm.querySelector('input[type=\"email\"]');\n    const passwordForm = modalForm.querySelector('input[type=\"password\"]');\n    const btnForm = modalForm.querySelector('.send-button');\n\n    btnForm.addEventListener('click', handleSubmit);\n\n    modalForm.addEventListener('click', (e) => {\n      if (e.target.classList.contains('modal') || e.target.classList.contains('btn-close')) {\n        modalForm.style.display = 'none';\n        emailForm.value = '';\n        passwordForm.value = '';\n      }\n    });\n\n    async function handleSubmit(e) {\n      e.preventDefault();\n      if (emailForm.value && passwordForm.value) {\n        submitForm(modalForm, emailForm.value, passwordForm.value);\n      } else {\n        alert('Fill in all fields!');\n      }\n    }\n\n  }\n\n  async function submitForm(form, email, password) {\n    const token = await getToken(email, password);\n    sessionStorage.token = token;\n\n    if (token) {\n        showHide();\n        form.style.display = 'none';\n        trueToken = token;\n        await fetchAndDisplayCards();\n    }\n\n    return token;\n  }\n}\n\nasync function fetchAndDisplayCards() {\n    const token = sessionStorage.getItem('token');\n  \n    if (token) {\n      try {\n        const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n  \n        if (response.ok) {\n          const cards = await response.json();\n  \n          const taskBoard = document.querySelector(\"#taskBoard\");\n          taskBoard.innerHTML = \"\";\n  \n          cards.forEach(async (cardData) => {\n            await displayCard(cardData);\n          });\n        } else {\n          console.error(\"Error fetching cards:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error fetching cards:\", error);\n      }\n    }\n  }\n\nlogin();\n\nasync function displayCard(cardData) {\n  const taskBoard = document.querySelector(\"#taskBoard\");\n  const cardContainer = document.createElement(\"div\");\n\n  cardContainer.className = \"card\";\n  cardContainer.setAttribute(\"data-id\", cardData.id);\n\n  cardContainer.innerHTML = `\n      <div class=\"card__text\">\n      <h4>Name:</h4> <p>${cardData.name}</p>\n      <h4>Doctor:</h4> <p>${cardData.doctor}</p>\n      <h4>Description:</h4> <p>${cardData.description}</p>\n      </div>\n      <div class=\"button__contianer\">\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\n      </div>\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\n    `;\n\n  taskBoard.appendChild(cardContainer);\n}\n\nasync function getAllCards() {\n  const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cards = await response.json();\n\n  cards.forEach(async (cardData) => {\n    await displayCard(cardData);\n  });\n}\n\n\n\nasync function deleteCard(cardId) {\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\n\n  if (confirmation) {\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n\n    if (response.ok) {\n      const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\n      cardToRemove.remove();\n    } else {\n      console.error(\"Error to delete:\", response.statusText);\n    }\n  }\n}\n\n\nasync function openEditModal(cardId) {\n    const token = sessionStorage.getItem('token');\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cards = await response.json();\n\n  const optionActive = (value, option) => value === option ? \"selected\" : \"\";\n\n  const editForm = document.createElement(\"div\");\n  editForm.className = \"edit__form\";\n  editForm.innerHTML = `\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"${cards.name}\">\n      <label for=\"editName\" class=\"user-label\">Name</label>\n    </div>\n    <label for=\"editDoctor\" class=\"select__label name__select1\">Doctor</label>\n    <div class=\"select select__edit-container\">\n    <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\n    <option value=\"Cardiologist\" ${optionActive(cards.doctor, \"Cardiologist\")}>Cardiologist</option>\n    <option value=\"Dentist\"  ${optionActive(cards.doctor, \"Dentist\")}>Dentist</option>\n    <option value=\"Therapist\"  ${optionActive(cards.doctor, \"Therapist\")}>Therapist</option>\n    </select>\n    </div>\n    <div class=\"input-group\">\n    <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"${cards.description}\">\n    <label for=\"editDescription\" class=\"user-label\">Description</label>\n  </div>\n    \n    <label for=\"editStatus\" class=\"select__label name__select2\">Status</label>\n    <div class=\"select select__edit-container\">\n    <select id=\"editStatus\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select status</option>\n      <option value=\"active\" ${optionActive(cards.status, \"active\")}>Active</option>\n      <option value=\"completed\" ${optionActive(cards.status, \"completed\")}>Completed</option>\n    </select>\n    </div>\n    <label for=\"editPriority\" class=\"select__label name__select3\">Priority</label>\n    <div class=\"select select__edit-container\">\n    <select id=\"editPriority\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select priority</option>\n      <option value=\"low\" ${optionActive(cards.priority, \"low\")}>Low</option>\n      <option value=\"medium\" ${optionActive(cards.priority, \"medium\")}>Medium</option>\n      <option value = \"high\" ${optionActive(cards.priority, \"high\")}> High</ >\n    </select > \n    </div>\n    <div id=\"additionalFields\"></div>\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\n  `;\n\n  const editFormContainer = document.getElementById(\"editFormContainer\");\n  editFormContainer.innerHTML = \"\";\n  editFormContainer.appendChild(editForm);\n\n  const editModal = document.getElementById(\"editModal\");\n  editModal.style.display = \"block\";\n  handleDoctorChange(cards);\n}\n\nfunction handleDoctorChange() {\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\n\n  additionalFieldsContainer.innerHTML = \"\";\n\n  if (selectedDoctor === 'Cardiologist') {\n    additionalFieldsContainer.innerHTML = `\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\n        <label for=\"editAge\" class=\"user-label\">Age</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editPressure\">\n        <label for=\"editPressure\" class=\"user-label\">Normal pressure</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editBMI\">\n        <label for=\"editBMI\" class=\"user-label\">Body mass index</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"text\" id=\"editHeartDisease\">\n        <label for=\"editHeartDisease\" class=\"user-label\">Past diseases</label>\n      </div>\n    `;\n  } else if (selectedDoctor === 'Dentist') {\n    additionalFieldsContainer.innerHTML = `\n    <label for=\"editLastVisitDate\" class=\"select__label name__select4\">Date of the last visit</label>\n    <div class=\"input-group\">\n      <input required=\"\" name=\"text\" autocomplete=\"off\" class=\"input edit__date\" type=\"date\" id=\"editLastVisitDate\">\n    </div>\n    `;\n  } else if (selectedDoctor === 'Therapist') {\n    additionalFieldsContainer.innerHTML = `\n    <div class=\"input-group\">\n      <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\n      <label for=\"editAge\" class=\"user-label\">Age</label>\n    </div>\n    `;\n  }\n}\n\nfunction closeModal() {\n  const editModal = document.getElementById(\"editModal\");\n  editModal.style.display = \"none\";\n  const editForm = document.querySelector(\".edit__form\")\n  editForm.innerHTML = \"\";\n}\n\nasync function saveChanges(cardId) {\n    const token = sessionStorage.getItem('token');\n  const editForm = document.querySelector(\".edit__form\")\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\n  const newName = editForm.querySelector(\"#editName\").value;\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\n\n  const updatedData = {\n    name: newName,\n    doctor: newDoctor,\n    description: newDescription,\n    status: newStatus,\n    priority: newPriority\n  };\n\n  if (newDoctor === \"Cardiologist\") {\n    const newAge = editForm.querySelector(\"#editAge\").value;\n    const newPressure = editForm.querySelector(\"#editPressure\").value;\n    const newBMi = editForm.querySelector(\"#editBMI\").value;\n    const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\n    updatedData.age = newAge;\n    updatedData.pulse = newPressure;\n    updatedData.massIndex = newBMi;\n    updatedData.pastDiseases = newDesease;\n  } else if (newDoctor === \"Dentist\") {\n    const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\n    updatedData.lastVisit = newDate;\n  } else if (newDoctor === \"Therapist\") {\n    const newAge = editForm.querySelector(\"#editAge\").value;\n    updatedData.age = newAge;\n  }\n\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(updatedData)\n  });\n\n  cardContainer.innerHTML = `\n  <div class=\"card__text\">\n  <h4>Name:</h4> <p>${newName}</p>\n  <h4>Doctor:</h4> <p>${newDoctor}</p>\n  <h4>Description:</h4> <p>${newDescription}</p>\n  </div>\n  <div class=\"button__contianer\">\n  <button onclick=\"showMore(${cardId})\">Show more</button>\n  <button onclick=\"openEditModal(${cardId})\">Edit</button>\n  </div>\n  <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\n      `;\n\n  closeModal();\n}\n\nasync function showMore(cardId) {\n    const token = sessionStorage.getItem('token');\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cardData = await response.json();\n\n  const detailsContainer = document.getElementById(\"detailsContainer\");\n  const detailsContent = document.createElement(\"div\");\n\n  detailsContent.className = \"details__content\";\n  const baseInfo = `\n    <h4>Name:</h4> <p> ${cardData.name}</p>\n    <h4>Doctor: <span>${cardData.doctor}</span></h4>\n    <h4>Description:</h4> <p> ${cardData.description}</p>\n    <h4>Priority: <span>${cardData.priority}</span></h4>\n    <h4>Status: <span>${cardData.status}</span></h4>\n  `;\n\n  if (cardData.doctor === 'Cardiologist') {\n    detailsContent.innerHTML = `\n    ${baseInfo}\n      <h4>Age: <span>${cardData.age}</span></h4>\n      <h4>Normalpressure: <span>${cardData.pulse}</span></h4>\n      <h4>Body mass index: <span>${cardData.massIndex}</span></h4>\n      <h4>Past diseases:</h4> <p> ${cardData.pastDiseases}</p>\n    `;\n  } else if (cardData.doctor === 'Dentist') {\n    detailsContent.innerHTML = `\n    ${baseInfo}\n      <h4>Date of the last visit:</h4> <p> ${cardData.lastVisit}</p>\n    `;\n  } else if (cardData.doctor === 'Therapist') {\n    detailsContent.innerHTML = `\n    ${baseInfo}\n    <h4>Age: <span>${cardData.age}</span></h4>\n    `;\n  }\n\n  detailsContainer.innerHTML = \"\";\n  detailsContainer.appendChild(detailsContent);\n\n  const detailsModal = document.getElementById(\"detailsModal\");\n  detailsModal.style.display = \"block\";\n}\n\nfunction closeShowMore() {\n  const detailsModal = document.getElementById(\"detailsModal\");\n  detailsModal.style.display = \"none\";\n}\n\nasync function filterCards() {\n    const token = sessionStorage.getItem('token');\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\n  const doctorFilter = document.getElementById(\"doctorFilter\").value;\n  const statusFilter = document.getElementById(\"statusFilter\").value;\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\n\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cards = await response.json();\n\n  cards.forEach(card => {\n    const cardToRemove = document.querySelector(`.card[data-id=\"${card.id}\"]`);\n    const nameElement = card.name;\n    const doctorElement = card.doctor;\n    const statusElement = card.status;\n    const priorityElement = card.priority;\n\n    const name = nameElement ? nameElement.toLowerCase() : \"\";\n    const doctor = doctorElement ? doctorElement : \"\";\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\n\n    const nameMatch = name.includes(searchInput);\n    const doctorMatch = (doctorFilter === '' || doctor === doctorFilter);\n    const statusMatch = (statusFilter === '' || status === statusFilter);\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\n\n    if (nameMatch && statusMatch && priorityMatch && doctorMatch) {\n      cardToRemove.style.display = \"\";\n    } else {\n      cardToRemove.style.display = \"none\";\n    }\n  });\n}\n"]}