{"version":3,"sources":["main.js","make-visits.js"],"names":["tokenAPI","trueToken","async","getToken","email","password","response","fetch","method","headers","Content-Type","body","JSON","stringify","ok","text","Error","error","alert","message","showHide","enterBtn","document","querySelector","logoutBtn","createVisitBtn","filterPage","header","style","background","height","display","classList","add","remove","login","sessionStorage","getItem","fetchAndDisplayCards","addEventListener","modalForm","emailForm","passwordForm","e","preventDefault","value","form","token","submitForm","target","contains","removeItem","window","location","reload","Authorization","cards","json","innerHTML","forEach","cardData","displayCard","console","statusText","taskBoard","cardContainer","createElement","className","setAttribute","id","name","doctor","description","appendChild","deleteCard","cardId","confirmation","confirm","openEditModal","optionActive","option","editForm","status","priority","comment","editFormContainer","getElementById","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","newDescription","updatedData","newAge","newPressure","newBMi","newDesease","age","pulse","massIndex","pastDiseases","newDate","lastVisit","showMore","detailsContainer","detailsContent","baseInfo","closeShowMore","filterCards","searchInput","toLowerCase","doctorFilter","statusFilter","priorityFilter","card","cardToRemove","nameElement","doctorElement","statusElement","priorityElement","nameMatch","includes","doctorMatch","statusMatch","priorityMatch","btnMakeForm","createModal","inputCreateName","purpose","btnCloseForm","selectMenuDoctors","selectPriorityContainer","btnCreateVisit","elementsForm","querySelectorAll","formData","Module","[object Object]","element","event","this","clearModal","Array","from","filter","divElement","getComputedStyle","some","inputElement","parseFloat","textContent","pressureValue","isNaN","massValue","createNameValue","minimalVisit","Date","maxVisit","lastVisitValue","convertValue","data","CreateVisit","sendInfo","Visit","dontAddElements","changeHandler","VisitDentist","super","VisitTherapist","VisitCardiologist","openModalWindow","module","visit","makeOptions","visitDentist","doctorNotes","visitTherapist","visitCardiologist","closeForm","responseData","log"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const tokenAPI = 'https://ajax.test-danit.com/api/v2/cards/login';\r\nlet trueToken;\r\nasync function getToken(email, password) {\r\n  try {\r\n    const response = await fetch(tokenAPI, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const token = await response.text();\r\n      return token;\r\n    } else {\r\n      throw new Error('User is not registered!');\r\n    }\r\n  } catch (error) {\r\n    alert(error.message);\r\n  }\r\n}\r\n\r\nasync function showHide() {\r\n  const enterBtn = document.querySelector('.login-button');\r\n  const logoutBtn = document.querySelector('.logout-button');\r\n  const createVisitBtn = document.querySelector('.create-visit-button');\r\n  const filterPage = document.querySelector(\".filter__section\");\r\n  const header = document.querySelector(\".header\");\r\n\r\n  header.style.background = \"none\";\r\n  header.style.height = \"auto\";\r\n  filterPage.style.display = \"block\";\r\n  enterBtn.classList.add('hidden');\r\n  logoutBtn.classList.remove('hidden');\r\n  createVisitBtn.classList.remove('hidden');\r\n}\r\n\r\nasync function login() {\r\n  const enterBtn = document.querySelector('.login-button');\r\n  const logoutBtn = document.querySelector('.logout-button');\r\n\r\n  if (!sessionStorage.getItem('token')) {\r\n    enterBtn.addEventListener('click', showModal);\r\n  } else {\r\n    showHide();\r\n    await fetchAndDisplayCards();\r\n  }\r\n\r\n  logoutBtn.addEventListener('click', () => {\r\n    sessionStorage.removeItem('token')\r\n    window.location.reload()\r\n  });\r\n\r\n  async function showModal() {\r\n    const modalForm = document.querySelector('#authorization-modal');\r\n    modalForm.style.display = 'block';\r\n\r\n    const emailForm = modalForm.querySelector('input[type=\"email\"]');\r\n    const passwordForm = modalForm.querySelector('input[type=\"password\"]');\r\n    const btnForm = modalForm.querySelector('.send-button');\r\n\r\n    btnForm.addEventListener('click', handleSubmit);\r\n\r\n    modalForm.addEventListener('click', (e) => {\r\n      if (e.target.classList.contains('modal') || e.target.classList.contains('btn-close')) {\r\n        modalForm.style.display = 'none';\r\n        emailForm.value = '';\r\n        passwordForm.value = '';\r\n      }\r\n    });\r\n\r\n    async function handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (emailForm.value && passwordForm.value) {\r\n        submitForm(modalForm, emailForm.value, passwordForm.value);\r\n      } else {\r\n        alert('Fill in all fields!');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  async function submitForm(form, email, password) {\r\n    const token = await getToken(email, password);\r\n    sessionStorage.token = token;\r\n\r\n    if (token) {\r\n      showHide();\r\n      form.style.display = 'none';\r\n      trueToken = token;\r\n      await fetchAndDisplayCards();\r\n    }\r\n\r\n    return token;\r\n  }\r\n}\r\n\r\nasync function fetchAndDisplayCards() {\r\n  const token = sessionStorage.getItem('token');\r\n\r\n  if (token) {\r\n    try {\r\n      const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const cards = await response.json();\r\n\r\n        const taskBoard = document.querySelector(\"#taskBoard\");\r\n        taskBoard.innerHTML = \"\";\r\n\r\n        cards.forEach(async (cardData) => {\r\n          await displayCard(cardData);\r\n        });\r\n      } else {\r\n        console.error(\"Error fetching cards:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching cards:\", error);\r\n    }\r\n  }\r\n}\r\n\r\nlogin();\r\n\r\nasync function displayCard(cardData) {\r\n  const taskBoard = document.querySelector(\"#taskBoard\");\r\n  const cardContainer = document.createElement(\"div\");\r\n\r\n  cardContainer.className = \"card\";\r\n  cardContainer.setAttribute(\"data-id\", cardData.id);\r\n\r\n  cardContainer.innerHTML = `\r\n      <div class=\"card__text\">\r\n      <h4>Name:</h4> <p>${cardData.name}</p>\r\n      <h4>Doctor:</h4> <p>${cardData.doctor}</p>\r\n      <h4>Description:</h4> <p>${cardData.description}</p>\r\n      </div>\r\n      <div class=\"button__contianer\">\r\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\r\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\r\n      </div>\r\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\r\n    `;\r\n\r\n  taskBoard.appendChild(cardContainer);\r\n}\r\n\r\nasync function deleteCard(cardId) {\r\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\r\n  const token = sessionStorage.getItem('token');\r\n\r\n  if (confirmation) {\r\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n      cardToRemove.remove();\r\n    } else {\r\n      console.error(\"Error to delete:\", response.statusText);\r\n    }\r\n  }\r\n}\r\n\r\nasync function openEditModal(cardId) {\r\n  const token = sessionStorage.getItem('token');\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  const optionActive = (value, option) => value === option ? \"selected\" : \"\";\r\n\r\n  const editForm = document.createElement(\"div\");\r\n  editForm.className = \"edit__form\";\r\n  editForm.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"${cards.name}\">\r\n      <label for=\"editName\" class=\"user-label\">Name</label>\r\n    </div>\r\n    <div class=\"select select__edit-container\">\r\n      <label for=\"editDoctor\" class=\"select__label\">Doctor</label>\r\n      <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\r\n        <option value=\"Cardiologist\" ${optionActive(cards.doctor, \"Cardiologist\")}>Cardiologist</option>\r\n        <option value=\"Dentist\"  ${optionActive(cards.doctor, \"Dentist\")}>Dentist</option>\r\n        <option value=\"Therapist\"  ${optionActive(cards.doctor, \"Therapist\")}>Therapist</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"input-group\">\r\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"${cards.description}\">\r\n      <label for=\"editDescription\" class=\"user-label\">Description</label>\r\n    </div>\r\n    \r\n  <div class=\"select select__edit-container\">\r\n  <label for=\"editStatus\" class=\"select__label\">Status</label>\r\n    <select id=\"editStatus\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select status</option>\r\n      <option value=\"active\" ${optionActive(cards.status, \"active\")}>Active</option>\r\n      <option value=\"completed\" ${optionActive(cards.status, \"completed\")}>Completed</option>\r\n    </select>\r\n    </div>\r\n    <div class=\"select select__edit-container\">\r\n    <label for=\"editPriority\" class=\"select__label \">Priority</label>\r\n    <select id=\"editPriority\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select priority</option>\r\n      <option value=\"low\" ${optionActive(cards.priority, \"low\")}>Low</option>\r\n      <option value=\"medium\" ${optionActive(cards.priority, \"medium\")}>Medium</option>\r\n      <option value = \"high\" ${optionActive(cards.priority, \"high\")}> High</ >\r\n    </select > \r\n    </div>\r\n    <div class=\"input-group\">\r\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editComment\" value=\"${cards.comment}\">\r\n      <label for=\"editComment\" class=\"user-label\">Comment</label>\r\n    </div>\r\n    <div id=\"additionalFields\"></div>\r\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\r\n  `;\r\n\r\n  const editFormContainer = document.getElementById(\"editFormContainer\");\r\n  editFormContainer.innerHTML = \"\";\r\n  editFormContainer.appendChild(editForm);\r\n\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"block\";\r\n  handleDoctorChange(cards);\r\n}\r\n\r\nfunction handleDoctorChange() {\r\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\r\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\r\n\r\n  additionalFieldsContainer.innerHTML = \"\";\r\n\r\n  if (selectedDoctor === 'Cardiologist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n        <label for=\"editAge\" class=\"user-label\">Age</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editPressure\">\r\n        <label for=\"editPressure\" class=\"user-label\">Normal pressure</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editBMI\">\r\n        <label for=\"editBMI\" class=\"user-label\">Body mass index</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"text\" id=\"editHeartDisease\">\r\n        <label for=\"editHeartDisease\" class=\"user-label\">Past diseases</label>\r\n      </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Dentist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <div class=\"input-group\">\r\n    <label for=\"editLastVisitDate\" class=\"select__label\">Date of the last visit</label>\r\n      <input required=\"\" name=\"text\" autocomplete=\"off\" class=\"input edit__date\" type=\"date\" id=\"editLastVisitDate\">\r\n    </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Therapist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n      <label for=\"editAge\" class=\"user-label\">Age</label>\r\n    </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction closeModal() {\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"none\";\r\n  const editForm = document.querySelector(\".edit__form\");\r\n  editForm.innerHTML = \"\";\r\n}\r\n\r\nasync function saveChanges(cardId) {\r\n  const token = sessionStorage.getItem('token');\r\n  const editForm = document.querySelector(\".edit__form\")\r\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\r\n  const newName = editForm.querySelector(\"#editName\").value;\r\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\r\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\r\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\r\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\r\n  const newComment = editForm.querySelector(\"#editComment\").value;\r\n\r\n  const updatedData = {\r\n    name: newName,\r\n    doctor: newDoctor,\r\n    description: newDescription,\r\n    status: newStatus,\r\n    priority: newPriority,\r\n    comment: newComment\r\n  };\r\n\r\n  if (newDoctor === \"Cardiologist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    const newPressure = editForm.querySelector(\"#editPressure\").value;\r\n    const newBMi = editForm.querySelector(\"#editBMI\").value;\r\n    const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\r\n    updatedData.age = newAge;\r\n    updatedData.pulse = newPressure;\r\n    updatedData.massIndex = newBMi;\r\n    updatedData.pastDiseases = newDesease;\r\n  } else if (newDoctor === \"Dentist\") {\r\n    const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\r\n    updatedData.lastVisit = newDate;\r\n  } else if (newDoctor === \"Therapist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    updatedData.age = newAge;\r\n  }\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(updatedData)\r\n  });\r\n\r\n  cardContainer.innerHTML = `\r\n  <div class=\"card__text\">\r\n  <h4>Name:</h4> <p>${newName}</p>\r\n  <h4>Doctor:</h4> <p>${newDoctor}</p>\r\n  <h4>Description:</h4> <p>${newDescription}</p>\r\n  </div>\r\n  <div class=\"button__contianer\">\r\n  <button onclick=\"showMore(${cardId})\">Show more</button>\r\n  <button onclick=\"openEditModal(${cardId})\">Edit</button>\r\n  </div>\r\n  <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\r\n      `;\r\n\r\n  closeModal();\r\n}\r\n\r\nasync function showMore(cardId) {\r\n  const token = sessionStorage.getItem('token');\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cardData = await response.json();\r\n\r\n  const detailsContainer = document.getElementById(\"detailsContainer\");\r\n  const detailsContent = document.createElement(\"div\");\r\n\r\n  detailsContent.className = \"details__content\";\r\n  const baseInfo = `\r\n    <h4>Name: <span>${cardData.name}</span></h4>\r\n    <h4>Doctor: <span>${cardData.doctor}</span></h4>\r\n    <h4>Description: <span>${cardData.description}</span></h4>\r\n    <h4>Priority: <span>${cardData.priority}</span></h4>\r\n    <h4>Status: <span>${cardData.status}</span></h4>\r\n    <h4>Comment for doctor: <span>${cardData.comment}</span></h4>\r\n  `;\r\n\r\n  if (cardData.doctor === 'Cardiologist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Age: <span>${cardData.age}</span></h4>\r\n      <h4>Normalpressure: <span>${cardData.pulse}</span></h4>\r\n      <h4>Body mass index: <span>${cardData.massIndex}</span></h4>\r\n      <h4>Past diseases: <span>${cardData.pastDiseases}</span></h4>\r\n    `;\r\n  } else if (cardData.doctor === 'Dentist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Date of the last visit: <span>${cardData.lastVisit}</span></h4>\r\n    `;\r\n  } else if (cardData.doctor === 'Therapist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n    <h4>Age: <span>${cardData.age}</span></h4>\r\n    `;\r\n  }\r\n\r\n  detailsContainer.innerHTML = \"\";\r\n  detailsContainer.appendChild(detailsContent);\r\n\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"block\";\r\n}\r\n\r\nfunction closeShowMore() {\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"none\";\r\n}\r\n\r\nasync function filterCards() {\r\n  const token = sessionStorage.getItem('token');\r\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\r\n  const doctorFilter = document.getElementById(\"doctorFilter\").value;\r\n  const statusFilter = document.getElementById(\"statusFilter\").value;\r\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(card => {\r\n    const cardToRemove = document.querySelector(`.card[data-id=\"${card.id}\"]`);\r\n    const nameElement = card.name;\r\n    const doctorElement = card.doctor;\r\n    const statusElement = card.status;\r\n    const priorityElement = card.priority;\r\n\r\n    const name = nameElement ? nameElement.toLowerCase() : \"\";\r\n    const doctor = doctorElement ? doctorElement : \"\";\r\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\r\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\r\n\r\n    const nameMatch = name.includes(searchInput);\r\n    const doctorMatch = (doctorFilter === '' || doctor === doctorFilter);\r\n    const statusMatch = (statusFilter === '' || status === statusFilter);\r\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\r\n\r\n    if (nameMatch && statusMatch && priorityMatch && doctorMatch) {\r\n      cardToRemove.style.display = \"\";\r\n    } else {\r\n      cardToRemove.style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const btnMakeForm = document.querySelector('.header__btn-make-visit');\r\nconst form = document.querySelector('.header__form');\r\n\r\nconst createModal = document.getElementById(\"createModal\");\r\nconst inputCreateName = document.querySelector(\"#create__inputName\")\r\nconst purpose = document.querySelector('#create__inputPurpose')\r\nconst age = document.querySelector('#create__inputAge')\r\nconst pulse = document.querySelector('#create__inputPressure')\r\nconst massIndex = document.querySelector('#create__inputBMI')\r\nconst description = document.querySelector('#create__inputDescription')\r\nconst pastDiseases = document.querySelector('#create__inputDisease')\r\nconst lastVisit = document.querySelector('#create__inputLastVisit')\r\nconst comment = document.querySelector('#create__inputComment')\r\nconst error = document.querySelector('.form__error')\r\nconst btnCloseForm = document.querySelector('.form__button-close-form')\r\nconst selectMenuDoctors = document.querySelector('.form__selector-doctors')\r\nconst selectPriorityContainer = document.querySelector(\"#create__selectPriority\")\r\n\r\nconst btnCreateVisit = document.querySelector('.form__button-create-visit')\r\nlet elementsForm = document.querySelectorAll('.form input, .form select')\r\nlet formData = []\r\nclass Module {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    clearModal() {\r\n        form.style.display = `none`;\r\n        createModal.style.display = 'none';\r\n        elementsForm.forEach((element) => {\r\n            element.value = '';\r\n        })\r\n        purpose.style.display = 'none';\r\n        description.style.display = 'none';\r\n        inputCreateName.style.display = \"none\";\r\n        selectPriorityContainer.style.display = 'none';\r\n        btnCreateVisit.style.display = 'none';\r\n        comment.style.display = 'none';\r\n        pastDiseases.style.display = 'none';\r\n        massIndex.style.display = 'none';\r\n        pulse.style.display = 'none';\r\n        age.style.display = 'none';\r\n        lastVisit.style.display = 'none';\r\n        error.style.display = 'none';\r\n    }\r\n\r\n    closeForm() {\r\n        btnCloseForm.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            this.clearModal();\r\n        })\r\n\r\n        document.addEventListener('click', (event) => {\r\n            if (event.target === createModal) {\r\n                this.clearModal();\r\n            }\r\n        })\r\n    }\r\n\r\n    sendInfo() {\r\n        btnCreateVisit.addEventListener('click', async (event) => {\r\n            event.preventDefault();\r\n            const fields = Array.from(document.querySelectorAll('.form div')).filter((divElement) => {\r\n                return window.getComputedStyle(divElement).display !== 'none' && divElement.id !== 'create__inputComment'\r\n            }).some((divElement) => {\r\n                const elements = Array.from(divElement.querySelectorAll('input, select'))\r\n                return elements.some((inputElement) => inputElement.value === '')\r\n\r\n            });\r\n\r\n            if (fields) {\r\n                error.style.display = 'block';\r\n                return;\r\n            } if (age.style.display !== 'none') {\r\n\r\n                if (parseFloat(document.querySelector('#createAge').value) >= 150 || parseFloat(document.querySelector('#createAge').value) <= 0) {\r\n                    error.textContent = 'Incorrect value! Enter your real age';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            if (pulse.style.display !== 'none') {\r\n                const pressureValue = parseFloat(document.querySelector('#createPressure').value);\r\n                if (isNaN(pressureValue) || pressureValue >= 170 || pressureValue <= 50) {\r\n                    error.textContent = 'Incorrect value! Enter your real pulse';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            if (massIndex.style.display !== 'none') {\r\n                const massValue = parseFloat(document.querySelector('#createBMI').value);\r\n                if (isNaN(massValue) || massValue >= 700 || massValue <= 0) {\r\n                    error.textContent = 'Incorrect value! Enter your real mass index';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            const createNameValue = document.querySelector('#createName').value;\r\n            if (!isNaN(parseFloat(createNameValue))) {\r\n                error.textContent = 'Incorrect value! Enter your real name';\r\n                error.style.display = 'block';\r\n                return;\r\n            }\r\n            if (lastVisit.style.display !== 'none') {\r\n                const minimalVisit = new Date('1950-01-01')\r\n                const maxVisit = new Date()\r\n                const lastVisitValue = document.querySelector('#createLastVisitDate')\r\n                const convertValue = new Date(lastVisitValue.value)\r\n                if (convertValue <= minimalVisit || convertValue >= maxVisit) {\r\n                    error.textContent = 'Incorrect value! Enter correct data';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const data = new CreateVisit()\r\n\r\n            this.clearModal()\r\n\r\n            try {\r\n                await sendInfo(data);\r\n                await fetchAndDisplayCards()\r\n            } catch (error) {\r\n                console.error('Error sending data:', error)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nclass Visit {\r\n    constructor() {\r\n        this.dontAddElements = true\r\n    }\r\n\r\n    makeOptions() {\r\n        if (selectMenuDoctors && this.dontAddElements === true) {\r\n            this.dontAddElements = false\r\n\r\n            const changeHandler = () => {\r\n                purpose.style.display = 'block'\r\n                description.style.display = 'block'\r\n                inputCreateName.style.display = \"block\";\r\n                selectPriorityContainer.style.display = 'flex';\r\n                btnCreateVisit.style.display = 'block'\r\n                comment.style.display = 'block'\r\n            };\r\n            selectMenuDoctors.addEventListener('change', changeHandler)\r\n        }\r\n    }\r\n}\r\n\r\nclass VisitDentist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === 'Dentist') {\r\n                    lastVisit.style.display = 'block'\r\n                } else {\r\n                    lastVisit.style.display = 'none'\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\nclass VisitTherapist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === 'Cardiologist' || selectMenuDoctors.value === \"Therapist\") {\r\n                    age.style.display = 'block';\r\n                } else {\r\n                    age.style.display = 'none';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass VisitCardiologist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === \"Cardiologist\") {\r\n                    pulse.style.display = 'block';\r\n                    massIndex.style.display = 'block';\r\n                    pastDiseases.style.display = 'block';\r\n\r\n                } else {\r\n                    pastDiseases.style.display = 'none';\r\n                    massIndex.style.display = 'none';\r\n                    pulse.style.display = 'none';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction openModalWindow() {\r\n    createModal.style.display = \"block\";\r\n    form.style.display = `flex`;\r\n}\r\n\r\nconst module = new Module();\r\n\r\nconst visit = new Visit();\r\nvisit.makeOptions();\r\nconst visitDentist = new VisitDentist();\r\nvisitDentist.doctorNotes();\r\n\r\nconst visitTherapist = new VisitTherapist();\r\nvisitTherapist.doctorNotes();\r\nconst visitCardiologist = new VisitCardiologist();\r\nvisitCardiologist.doctorNotes();\r\nmodule.sendInfo();\r\nmodule.closeForm();\r\n\r\n\r\n\r\nclass CreateVisit {\r\n    constructor() {\r\n        this.doctor = form.querySelector('.form__selector-doctors').value\r\n        this.name = form.querySelector('.form__patient-name').value\r\n        this.priority = form.querySelector('.form__selector-urgency').value\r\n        this.purpose = form.querySelector('.form__purpose').value\r\n        this.description = form.querySelector('.form__description').value\r\n        this.lastVisit = form.querySelector('.form__last-visit').value\r\n        this.age = form.querySelector('.form__age').value\r\n        this.pulse = form.querySelector('.form__pulse').value\r\n        this.massIndex = form.querySelector('.form__mass-index').value\r\n        this.pastDiseases = form.querySelector('.form__past-diseases').value\r\n        this.comment = form.querySelector('.form__comment').value\r\n        this.status = \"active\"\r\n    }\r\n}\r\n\r\n\r\n\r\nasync function sendInfo(data) {\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    try {\r\n        const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        console.log('Response data:', responseData)\r\n\r\n        data.id = responseData.id;\r\n        return responseData;\r\n\r\n    }\r\n    catch (error) {\r\n        console.error('Error sending data:', error)\r\n        throw new Error(error)\r\n    }\r\n}\r\n"]}