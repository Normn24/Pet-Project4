{"version":3,"sources":["main.js"],"names":["token","async","displayCard","cardData","taskBoard","document","querySelector","cardContainer","createElement","className","setAttribute","id","innerHTML","name","doctor","description","appendChild","getAllCards","response","fetch","headers","Content-Type","Authorization","json","forEach","deleteCard","cardId","confirm","method","ok","remove","console","error","statusText","openEditModal","cards","optionActive","value","option","editForm","status","priority","editFormContainer","getElementById","style","display","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","newDescription","updatedData","newAge","newPressure","newBMi","newDesease","age","pulse","massIndex","pastDiseases","newDate","lastVisit","body","JSON","stringify","showMore","detailsContainer","detailsContent","baseInfo","closeShowMore","filterCards","searchInput","toLowerCase","doctorFilter","statusFilter","priorityFilter","card","cardToRemove","nameElement","doctorElement","statusElement","priorityElement","nameMatch","includes","doctorMatch","statusMatch","priorityMatch"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const token = \"6b6edd59-d784-4e87-a1cb-342f6158ace1\";\r\n\r\nasync function displayCard(cardData) {\r\n  const taskBoard = document.querySelector(\"#taskBoard\");\r\n  const cardContainer = document.createElement(\"div\");\r\n\r\n  cardContainer.className = \"card\";\r\n  cardContainer.setAttribute(\"data-id\", cardData.id);\r\n\r\n  cardContainer.innerHTML = `\r\n      <div class=\"card__text\">\r\n      <h4>Name:</h4> <p>${cardData.name}</p>\r\n      <h4>Doctor:</h4> <p>${cardData.doctor}</p>\r\n      <h4>Description:</h4> <p>${cardData.description}</p>\r\n      </div>\r\n      <div class=\"button__contianer\">\r\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\r\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\r\n      </div>\r\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\r\n    `;\r\n\r\n  taskBoard.appendChild(cardContainer);\r\n}\r\n\r\nasync function getAllCards() {\r\n  const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(async (cardData) => {\r\n    await displayCard(cardData);\r\n  });\r\n}\r\n\r\ngetAllCards();\r\n\r\nasync function deleteCard(cardId) {\r\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\r\n\r\n  if (confirmation) {\r\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n      cardToRemove.remove();\r\n    } else {\r\n      console.error(\"Error to delete:\", response.statusText);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function openEditModal(cardId) {\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  const optionActive = (value, option) => value === option ? \"selected\" : \"\";\r\n\r\n  const editForm = document.createElement(\"div\");\r\n  editForm.className = \"edit__form\";\r\n  editForm.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"${cards.name}\">\r\n      <label for=\"editName\" class=\"user-label\">Name</label>\r\n    </div>\r\n    <label for=\"editDoctor\" class=\"select__label name__select1\">Doctor</label>\r\n    <div class=\"select select__edit-container\">\r\n    <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\r\n    <option value=\"Cardiologist\" ${optionActive(cards.doctor, \"Cardiologist\")}>Cardiologist</option>\r\n    <option value=\"Dentist\"  ${optionActive(cards.doctor, \"Dentist\")}>Dentist</option>\r\n    <option value=\"Therapist\"  ${optionActive(cards.doctor, \"Therapist\")}>Therapist</option>\r\n    </select>\r\n    </div>\r\n    <div class=\"input-group\">\r\n    <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"${cards.description}\">\r\n    <label for=\"editDescription\" class=\"user-label\">Description</label>\r\n  </div>\r\n    \r\n    <label for=\"editStatus\" class=\"select__label name__select2\">Status</label>\r\n    <div class=\"select select__edit-container\">\r\n    <select id=\"editStatus\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select status</option>\r\n      <option value=\"active\" ${optionActive(cards.status, \"active\")}>Active</option>\r\n      <option value=\"completed\" ${optionActive(cards.status, \"completed\")}>Completed</option>\r\n    </select>\r\n    </div>\r\n    <label for=\"editPriority\" class=\"select__label name__select3\">Priority</label>\r\n    <div class=\"select select__edit-container\">\r\n    <select id=\"editPriority\" class=\"edit__select\">\r\n      <option value=\"\" disabled selected>Select priority</option>\r\n      <option value=\"low\" ${optionActive(cards.priority, \"low\")}>Low</option>\r\n      <option value=\"medium\" ${optionActive(cards.priority, \"medium\")}>Medium</option>\r\n      <option value = \"high\" ${optionActive(cards.priority, \"high\")}> High</ >\r\n    </select > \r\n    </div>\r\n    <div id=\"additionalFields\"></div>\r\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\r\n  `;\r\n\r\n  const editFormContainer = document.getElementById(\"editFormContainer\");\r\n  editFormContainer.innerHTML = \"\";\r\n  editFormContainer.appendChild(editForm);\r\n\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"block\";\r\n  handleDoctorChange(cards);\r\n}\r\n\r\nfunction handleDoctorChange() {\r\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\r\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\r\n\r\n  additionalFieldsContainer.innerHTML = \"\";\r\n\r\n  if (selectedDoctor === 'Cardiologist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n        <label for=\"editAge\" class=\"user-label\">Age</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editPressure\">\r\n        <label for=\"editPressure\" class=\"user-label\">Normal pressure</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editBMI\">\r\n        <label for=\"editBMI\" class=\"user-label\">Body mass index</label>\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"text\" id=\"editHeartDisease\">\r\n        <label for=\"editHeartDisease\" class=\"user-label\">Past diseases</label>\r\n      </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Dentist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <label for=\"editLastVisitDate\" class=\"select__label name__select4\">Date of the last visit</label>\r\n    <div class=\"input-group\">\r\n      <input required=\"\" name=\"text\" autocomplete=\"off\" class=\"input edit__date\" type=\"date\" id=\"editLastVisitDate\">\r\n    </div>\r\n    `;\r\n  } else if (selectedDoctor === 'Therapist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n    <div class=\"input-group\">\r\n      <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\r\n      <label for=\"editAge\" class=\"user-label\">Age</label>\r\n    </div>\r\n    `;\r\n  }\r\n}\r\n\r\nfunction closeModal() {\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"none\";\r\n  const editForm = document.querySelector(\".edit__form\")\r\n  editForm.innerHTML = \"\";\r\n}\r\n\r\nasync function saveChanges(cardId) {\r\n  const editForm = document.querySelector(\".edit__form\")\r\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\r\n  const newName = editForm.querySelector(\"#editName\").value;\r\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\r\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\r\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\r\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\r\n\r\n  const updatedData = {\r\n    name: newName,\r\n    doctor: newDoctor,\r\n    description: newDescription,\r\n    status: newStatus,\r\n    priority: newPriority\r\n  };\r\n\r\n  if (newDoctor === \"Cardiologist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    const newPressure = editForm.querySelector(\"#editPressure\").value;\r\n    const newBMi = editForm.querySelector(\"#editBMI\").value;\r\n    const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\r\n    updatedData.age = newAge;\r\n    updatedData.pulse = newPressure;\r\n    updatedData.massIndex = newBMi;\r\n    updatedData.pastDiseases = newDesease;\r\n  } else if (newDoctor === \"Dentist\") {\r\n    const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\r\n    updatedData.lastVisit = newDate;\r\n  } else if (newDoctor === \"Therapist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    updatedData.age = newAge;\r\n  }\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(updatedData)\r\n  });\r\n\r\n  cardContainer.innerHTML = `\r\n  <div class=\"card__text\">\r\n  <h4>Name:</h4> <p>${newName}</p>\r\n  <h4>Doctor:</h4> <p>${newDoctor}</p>\r\n  <h4>Description:</h4> <p>${newDescription}</p>\r\n  </div>\r\n  <div class=\"button__contianer\">\r\n  <button onclick=\"showMore(${cardId})\">Show more</button>\r\n  <button onclick=\"openEditModal(${cardId})\">Edit</button>\r\n  </div>\r\n  <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\r\n      `;\r\n\r\n  closeModal();\r\n}\r\n\r\nasync function showMore(cardId) {\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cardData = await response.json();\r\n\r\n  const detailsContainer = document.getElementById(\"detailsContainer\");\r\n  const detailsContent = document.createElement(\"div\");\r\n\r\n  detailsContent.className = \"details__content\";\r\n  const baseInfo = `\r\n    <h4>Name:</h4> <p> ${cardData.name}</p>\r\n    <h4>Doctor: <span>${cardData.doctor}</span></h4>\r\n    <h4>Description:</h4> <p> ${cardData.description}</p>\r\n    <h4>Priority: <span>${cardData.priority}</span></h4>\r\n    <h4>Status: <span>${cardData.status}</span></h4>\r\n  `;\r\n\r\n  if (cardData.doctor === 'Cardiologist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Age: <span>${cardData.age}</span></h4>\r\n      <h4>Normalpressure: <span>${cardData.pulse}</span></h4>\r\n      <h4>Body mass index: <span>${cardData.massIndex}</span></h4>\r\n      <h4>Past diseases:</h4> <p> ${cardData.pastDiseases}</p>\r\n    `;\r\n  } else if (cardData.doctor === 'Dentist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <h4>Date of the last visit:</h4> <p> ${cardData.lastVisit}</p>\r\n    `;\r\n  } else if (cardData.doctor === 'Therapist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n    <h4>Age: <span>${cardData.age}</span></h4>\r\n    `;\r\n  }\r\n\r\n  detailsContainer.innerHTML = \"\";\r\n  detailsContainer.appendChild(detailsContent);\r\n\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"block\";\r\n}\r\n\r\nfunction closeShowMore() {\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"none\";\r\n}\r\n\r\nasync function filterCards() {\r\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\r\n  const doctorFilter = document.getElementById(\"doctorFilter\").value;\r\n  const statusFilter = document.getElementById(\"statusFilter\").value;\r\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(card => {\r\n    const cardToRemove = document.querySelector(`.card[data-id=\"${card.id}\"]`);\r\n    const nameElement = card.name;\r\n    const doctorElement = card.doctor;\r\n    const statusElement = card.status;\r\n    const priorityElement = card.priority;\r\n\r\n    const name = nameElement ? nameElement.toLowerCase() : \"\";\r\n    const doctor = doctorElement ? doctorElement : \"\";\r\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\r\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\r\n\r\n    const nameMatch = name.includes(searchInput);\r\n    const doctorMatch = (doctorFilter === '' || doctor === doctorFilter);\r\n    const statusMatch = (statusFilter === '' || status === statusFilter);\r\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\r\n\r\n    if (nameMatch && statusMatch && priorityMatch && doctorMatch) {\r\n      cardToRemove.style.display = \"\";\r\n    } else {\r\n      cardToRemove.style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n\r\n"]}