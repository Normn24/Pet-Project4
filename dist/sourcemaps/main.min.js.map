{"version":3,"sources":["main.js","make-visits.js"],"names":["tokenAPI","trueToken","async","getToken","email","password","response","fetch","method","headers","Content-Type","body","JSON","stringify","ok","text","Error","error","alert","message","showHide","enterBtn","document","querySelector","logoutBtn","createVisitBtn","filterPage","header","style","background","height","display","classList","add","remove","login","sessionStorage","getItem","fetchAndDisplayCards","addEventListener","modalForm","emailForm","passwordForm","e","preventDefault","value","form","token","submitForm","target","contains","removeItem","window","location","reload","Authorization","cards","json","innerHTML","forEach","cardData","displayCard","console","statusText","taskBoard","cardContainer","createElement","className","setAttribute","id","name","doctor","description","appendChild","getAllCards","deleteCard","cardId","confirmation","confirm","openEditModal","optionActive","option","editForm","status","priority","comment","editFormContainer","getElementById","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","newDescription","updatedData","newAge","newPressure","newBMi","newDesease","age","pulse","massIndex","pastDiseases","newDate","lastVisit","showMore","detailsContainer","detailsContent","baseInfo","closeShowMore","filterCards","searchInput","toLowerCase","doctorFilter","statusFilter","priorityFilter","card","cardToRemove","nameElement","doctorElement","statusElement","priorityElement","nameMatch","includes","doctorMatch","statusMatch","priorityMatch","main","btnMakeForm","createModal","inputCreateName","purpose","btnCloseForm","selectMenuDoctors","selectPriorityContainer","btnCreateVisit","elementsForm","querySelectorAll","formData","Module","[object Object]","event","element","Array","from","filter","divElement","getComputedStyle","some","inputElement","parseFloat","textContent","pressureValue","isNaN","massValue","createNameValue","minimalVisit","Date","maxVisit","lastVisitValue","convertValue","data","CreateVisit","log","sendInfo","Visit","this","dontAddElements","changeHandler","removeEventListener","VisitDentist","super","VisitTherapist","VisitCardiologist","openModalWindow","module","visit","makeOptions","visitDentist","doctorNotes","visitTherapist","visitCardiologist","closeForm","responseData"],"mappings":"AAAA,MAAMA,SAAW,iDACjB,IAAIC,UACJC,eAAeC,SAASC,EAAOC,GAC7B,IACE,MAAMC,QAAiBC,MAAMP,SAAU,CACrCQ,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBT,MAAOA,EACPC,SAAUA,MAId,GAAIC,EAASQ,GAAI,CAEf,aADoBR,EAASS,OAG7B,MAAM,IAAIC,MAAM,2BAElB,MAAOC,GACPC,MAAMD,EAAME,UAIhBjB,eAAekB,WACb,MAAMC,EAAWC,SAASC,cAAc,iBAClCC,EAAYF,SAASC,cAAc,kBACnCE,EAAiBH,SAASC,cAAc,wBACxCG,EAAaJ,SAASC,cAAc,oBACpCI,EAASL,SAASC,cAAc,WAEtCI,EAAOC,MAAMC,WAAa,OAC1BF,EAAOC,MAAME,OAAS,OACtBJ,EAAWE,MAAMG,QAAU,QAC3BV,EAASW,UAAUC,IAAI,UACvBT,EAAUQ,UAAUE,OAAO,UAC3BT,EAAeO,UAAUE,OAAO,UAGlChC,eAAeiC,QACb,MAAMd,EAAWC,SAASC,cAAc,iBAClCC,EAAYF,SAASC,cAAc,kBAEpCa,eAAeC,QAAQ,UAG1BjB,iBACMkB,wBAHNjB,EAASkB,iBAAiB,SAW5BrC,iBACE,MAAMsC,EAAYlB,SAASC,cAAc,wBACzCiB,EAAUZ,MAAMG,QAAU,QAE1B,MAAMU,EAAYD,EAAUjB,cAAc,uBACpCmB,EAAeF,EAAUjB,cAAc,0BAC7BiB,EAAUjB,cAAc,gBAEhCgB,iBAAiB,SAUzBrC,eAA4ByC,GAC1BA,EAAEC,iBACEH,EAAUI,OAASH,EAAaG,MASxC3C,eAA0B4C,EAAM1C,EAAOC,GACrC,MAAM0C,QAAc5C,SAASC,EAAOC,GACpC+B,eAAeW,MAAQA,EAEnBA,IACF3B,WACA0B,EAAKlB,MAAMG,QAAU,OACrB9B,UAAY8C,QACNT,wBAhBJU,CAAWR,EAAWC,EAAUI,MAAOH,EAAaG,OAEpD3B,MAAM,0BAbVsB,EAAUD,iBAAiB,QAAUI,KAC/BA,EAAEM,OAAOjB,UAAUkB,SAAS,UAAYP,EAAEM,OAAOjB,UAAUkB,SAAS,gBACtEV,EAAUZ,MAAMG,QAAU,OAC1BU,EAAUI,MAAQ,GAClBH,EAAaG,MAAQ,SAnB3BrB,EAAUe,iBAAiB,QAAS,KAClCH,eAAee,WAAW,SAC1BC,OAAOC,SAASC,WA+CpBpD,eAAeoC,uBACb,MAAMS,EAAQX,eAAeC,QAAQ,SAErC,GAAIU,EACF,IACE,MAAMzC,QAAiBC,MAAM,2CAA4C,CACvEE,QAAS,CACPC,eAAgB,mBAChB6C,cAAiB,UAAUR,KAI/B,GAAIzC,EAASQ,GAAI,CACf,MAAM0C,QAAclD,EAASmD,OAEXnC,SAASC,cAAc,cAC/BmC,UAAY,GAEtBF,EAAMG,QAAQzD,MAAO0D,UACbC,YAAYD,UAGpBE,QAAQ7C,MAAM,wBAAyBX,EAASyD,YAElD,MAAO9C,GACP6C,QAAQ7C,MAAM,wBAAyBA,IAO7Cf,eAAe2D,YAAYD,GACzB,MAAMI,EAAY1C,SAASC,cAAc,cACnC0C,EAAgB3C,SAAS4C,cAAc,OAE7CD,EAAcE,UAAY,OAC1BF,EAAcG,aAAa,UAAWR,EAASS,IAE/CJ,EAAcP,UAAY,6DAEFE,EAASU,uCACPV,EAASW,8CACJX,EAASY,yGAGRZ,EAASS,iEACJT,EAASS,yFAEMT,EAASS,6BAG7DL,EAAUS,YAAYR,GAGxB/D,eAAewE,cACb,MAAMpE,QAAiBC,MAAM,2CAA4C,CACvEE,QAAS,CACPC,eAAgB,mBAChB6C,cAAiB,UAAUR,gBAGXzC,EAASmD,QAEvBE,QAAQzD,MAAO0D,UACbC,YAAYD,KAItB1D,eAAeyE,WAAWC,GACxB,MAAMC,EAAeC,QAAQ,qCACvB/B,EAAQX,eAAeC,QAAQ,SAErC,GAAIwC,EAAc,CAChB,MAAMvE,QAAiBC,MAAM,4CAA4CqE,EAAU,CACjFpE,OAAQ,SACRC,QAAS,CACPC,eAAgB,mBAChB6C,cAAiB,UAAUR,KAI/B,GAAIzC,EAASQ,GAAI,CACMQ,SAASC,cAAc,kBAAkBqD,OACjD1C,cAEb4B,QAAQ7C,MAAM,mBAAoBX,EAASyD,aAMjD7D,eAAe6E,cAAcH,GAC3B,MAAM7B,EAAQX,eAAeC,QAAQ,SAC/B/B,QAAiBC,MAAM,4CAA4CqE,EAAU,CACjFnE,QAAS,CACPC,eAAgB,mBAChB6C,cAAiB,UAAUR,KAGzBS,QAAclD,EAASmD,OAEvBuB,EAAe,CAACnC,EAAOoC,IAAWpC,IAAUoC,EAAS,WAAa,GAElEC,EAAW5D,SAAS4C,cAAc,OACxCgB,EAASf,UAAY,aACrBe,EAASxB,UAAY,2IAEkFF,EAAMc,mUAMxEU,EAAaxB,EAAMe,OAAQ,2EAC/BS,EAAaxB,EAAMe,OAAQ,mEACzBS,EAAaxB,EAAMe,OAAQ,8MAIgDf,EAAMgB,+WAQvFQ,EAAaxB,EAAM2B,OAAQ,8DACxBH,EAAaxB,EAAM2B,OAAQ,yUAOjCH,EAAaxB,EAAM4B,SAAU,qDAC1BJ,EAAaxB,EAAM4B,SAAU,2DAC7BJ,EAAaxB,EAAM4B,SAAU,4LAIgD5B,EAAM6B,qKAI/ET,wBAGjC,MAAMU,EAAoBhE,SAASiE,eAAe,qBAClDD,EAAkB5B,UAAY,GAC9B4B,EAAkBb,YAAYS,GAEZ5D,SAASiE,eAAe,aAChC3D,MAAMG,QAAU,QAC1ByD,mBAAmBhC,GAGrB,SAASgC,qBACP,MAAMC,EAAiBnE,SAASiE,eAAe,cAAc1C,MACvD6C,EAA4BpE,SAASiE,eAAe,oBAE1DG,EAA0BhC,UAAY,GAEf,iBAAnB+B,EACFC,EAA0BhC,UAAY,64BAkBV,YAAnB+B,EACTC,EAA0BhC,UAAY,mQAMV,cAAnB+B,IACTC,EAA0BhC,UAAY,oNAS1C,SAASiC,aACWrE,SAASiE,eAAe,aAChC3D,MAAMG,QAAU,OACTT,SAASC,cAAc,eAC/BmC,UAAY,GAGvBxD,eAAe0F,YAAYhB,GACzB,MAAM7B,EAAQX,eAAeC,QAAQ,SAC/B6C,EAAW5D,SAASC,cAAc,eAClC0C,EAAgB3C,SAASC,cAAc,mBAAmBqD,OAC1DiB,EAAUX,EAAS3D,cAAc,aAAasB,MAC9CiD,EAAYZ,EAAS3D,cAAc,eAAesB,MAClDkD,EAAiBb,EAAS3D,cAAc,oBAAoBsB,MAK5DmD,EAAc,CAClB1B,KAAMuB,EACNtB,OAAQuB,EACRtB,YAAauB,EACbZ,OARgBD,EAAS3D,cAAc,eAAesB,MAStDuC,SARkBF,EAAS3D,cAAc,iBAAiBsB,MAS1DwC,QARiBH,EAAS3D,cAAc,gBAAgBsB,OAW1D,GAAkB,iBAAdiD,EAA8B,CAChC,MAAMG,EAASf,EAAS3D,cAAc,YAAYsB,MAC5CqD,EAAchB,EAAS3D,cAAc,iBAAiBsB,MACtDsD,EAASjB,EAAS3D,cAAc,YAAYsB,MAC5CuD,EAAalB,EAAS3D,cAAc,qBAAqBsB,MAC/DmD,EAAYK,IAAMJ,EAClBD,EAAYM,MAAQJ,EACpBF,EAAYO,UAAYJ,EACxBH,EAAYQ,aAAeJ,OACtB,GAAkB,YAAdN,EAAyB,CAClC,MAAMW,EAAUvB,EAAS3D,cAAc,sBAAsBsB,MAC7DmD,EAAYU,UAAYD,OACnB,GAAkB,cAAdX,EAA2B,CACpC,MAAMG,EAASf,EAAS3D,cAAc,YAAYsB,MAClDmD,EAAYK,IAAMJ,QAGG1F,MAAM,4CAA4CqE,EAAU,CACjFpE,OAAQ,MACRC,QAAS,CACPC,eAAgB,mBAChB6C,cAAiB,UAAUR,GAE7BpC,KAAMC,KAAKC,UAAUmF,KAGvB/B,EAAcP,UAAY,qDAENmC,gCACEC,qCACKC,mFAGCnB,4DACKA,gFAEeA,8BAGhDe,aAGFzF,eAAeyG,SAAS/B,GACtB,MAAM7B,EAAQX,eAAeC,QAAQ,SAC/B/B,QAAiBC,MAAM,4CAA4CqE,EAAU,CACjFnE,QAAS,CACPC,eAAgB,mBAChB6C,cAAiB,UAAUR,KAGzBa,QAAiBtD,EAASmD,OAE1BmD,EAAmBtF,SAASiE,eAAe,oBAC3CsB,EAAiBvF,SAAS4C,cAAc,OAE9C2C,EAAe1C,UAAY,mBAC3B,MAAM2C,EAAW,yBACGlD,EAASU,2CACPV,EAASW,kDACJX,EAASY,oDACZZ,EAASwB,+CACXxB,EAASuB,yDACGvB,EAASyB,0BAGnB,iBAApBzB,EAASW,OACXsC,EAAenD,UAAY,SACzBoD,2BACiBlD,EAASyC,oDACEzC,EAAS0C,uDACR1C,EAAS2C,yDACX3C,EAAS4C,iCAET,YAApB5C,EAASW,OAClBsC,EAAenD,UAAY,SACzBoD,iDACuClD,EAAS8C,sBAErB,cAApB9C,EAASW,SAClBsC,EAAenD,UAAY,SACzBoD,yBACelD,EAASyC,yBAI5BO,EAAiBlD,UAAY,GAC7BkD,EAAiBnC,YAAYoC,GAERvF,SAASiE,eAAe,gBAChC3D,MAAMG,QAAU,QAG/B,SAASgF,gBACczF,SAASiE,eAAe,gBAChC3D,MAAMG,QAAU,OAG/B7B,eAAe8G,cACb,MAAMjE,EAAQX,eAAeC,QAAQ,SAC/B4E,EAAc3F,SAASiE,eAAe,eAAe1C,MAAMqE,cAC3DC,EAAe7F,SAASiE,eAAe,gBAAgB1C,MACvDuE,EAAe9F,SAASiE,eAAe,gBAAgB1C,MACvDwE,EAAiB/F,SAASiE,eAAe,kBAAkB1C,MAE3DvC,QAAiBC,MAAM,2CAA4C,CACvEE,QAAS,CACPC,eAAgB,mBAChB6C,cAAiB,UAAUR,YAGXzC,EAASmD,QAEvBE,QAAQ2D,IACZ,MAAMC,EAAejG,SAASC,cAAc,kBAAkB+F,EAAKjD,QAC7DmD,EAAcF,EAAKhD,KACnBmD,EAAgBH,EAAK/C,OACrBmD,EAAgBJ,EAAKnC,OACrBwC,EAAkBL,EAAKlC,SAEvBd,EAAOkD,EAAcA,EAAYN,cAAgB,GACjD3C,EAASkD,GAAgC,GACzCtC,EAASuC,EAAgBA,EAAcR,cAAgB,GACvD9B,EAAWuC,EAAkBA,EAAgBT,cAAgB,GAE7DU,EAAYtD,EAAKuD,SAASZ,GAC1Ba,EAAgC,KAAjBX,GAAuB5C,IAAW4C,EACjDY,EAAgC,KAAjBX,GAAuBjC,IAAWiC,EACjDY,EAAoC,KAAnBX,GAAyBjC,IAAaiC,EAG3DE,EAAa3F,MAAMG,QADjB6F,GAAaG,GAAeC,GAAiBF,EAClB,GAEA,SAzUnC3F;ACnIA,MAAM8F,KAAO3G,SAASC,cAAc,QAE9B2G,YAAc5G,SAASC,cAAc,2BACrCuB,KAAOxB,SAASC,cAAc,iBAE9B4G,YAAc7G,SAASiE,eAAe,eACtC6C,gBAAkB9G,SAASC,cAAc,sBACzC8G,QAAU/G,SAASC,cAAc,yBACjC8E,IAAM/E,SAASC,cAAc,qBAC7B+E,MAAQhF,SAASC,cAAc,0BAC/BgF,UAAYjF,SAASC,cAAc,qBACnCiD,YAAclD,SAASC,cAAc,6BACrCiF,aAAelF,SAASC,cAAc,yBACtCmF,UAAYpF,SAASC,cAAc,2BACnC8D,QAAU/D,SAASC,cAAc,yBACjCN,MAAQK,SAASC,cAAc,gBAC/B+G,aAAehH,SAASC,cAAc,4BACtCgH,kBAAoBjH,SAASC,cAAc,2BAC3CiH,wBAA0BlH,SAASC,cAAc,2BAEjDkH,eAAiBnH,SAASC,cAAc,8BAC9C,IAAImH,aAAepH,SAASqH,iBAAiB,6BACzCC,SAAW,GACf,MAAMC,OACFC,eAIAA,YACIR,aAAa/F,iBAAiB,QAAUwG,IACpCA,EAAMnG,iBACNE,KAAKlB,MAAMG,QAAU,OAErBoG,YAAYvG,MAAMG,QAAU,OAChC2G,aAAa/E,QAASqF,IAClBA,EAAQnG,MAAQ,OAG5BvB,SAASiB,iBAAiB,QAAUwG,IAC7BA,EAAM9F,SAAWkF,cACxBrF,KAAKlB,MAAMG,QAAU,OACrBoG,YAAYvG,MAAMG,QAAU,OAC5B2G,aAAa/E,QAASqF,IAClBA,EAAQnG,MAAQ,QAQhBiG,WAEIL,eAAelG,iBAAiB,QAASrC,MAAO6I,IAC5CA,EAAMnG,iBASN,GAReqG,MAAMC,KAAK5H,SAASqH,iBAAiB,cAAcQ,OAAQC,GACf,SAAhDhG,OAAOiG,iBAAiBD,GAAYrH,SAAwC,yBAAlBqH,EAAW/E,IAC7EiF,KAAMF,GACYH,MAAMC,KAAKE,EAAWT,iBAAiB,kBACxCW,KAAMC,GAAwC,KAAvBA,EAAa1G,QAMpD,YADA5B,MAAMW,MAAMG,QAAU,SAExB,GAA0B,SAAtBsE,IAAIzE,MAAMG,UAERyH,WAAWlI,SAASC,cAAc,cAAcsB,QAAU,KAAO2G,WAAWlI,SAASC,cAAc,cAAcsB,QAAU,GAG3H,OAFA5B,MAAMwI,YAAc,4CACpBxI,MAAMW,MAAMG,QAAU,SAI9B,GAA4B,SAAxBuE,MAAM1E,MAAMG,QAAoB,CAEhC,MAAM2H,EAAgBF,WAAWlI,SAASC,cAAc,mBAAmBsB,OAC3E,GAAI8G,MAAMD,IAAkBA,GAAiB,KAAOA,GAAiB,GAGjE,OAFAzI,MAAMwI,YAAc,8CACpBxI,MAAMW,MAAMG,QAAU,SAI9B,GAAgC,SAA5BwE,UAAU3E,MAAMG,QAAoB,CAEpC,MAAM6H,EAAYJ,WAAWlI,SAASC,cAAc,cAAcsB,OAClE,GAAI8G,MAAMC,IAAcA,GAAa,KAAOA,GAAa,EAGrD,OAFA3I,MAAMwI,YAAc,mDACpBxI,MAAMW,MAAMG,QAAU,SAG1B,MAAM8H,EAAkBvI,SAASC,cAAc,eAAesB,MAC9D,IAAK8G,MAAMH,WAAWK,IAGlB,OAFA5I,MAAMwI,YAAc,6CACpBxI,MAAMW,MAAMG,QAAU,SAG1B,GAAgC,SAA5B2E,UAAU9E,MAAMG,QAAoB,CACpC,MAAM+H,EAAc,IAAIC,KAAK,cACvBC,EAAU,IAAID,KACdE,EAAkB3I,SAASC,cAAc,wBACzC2I,EAAe,IAAIH,KAAKE,EAAepH,OAC7C,GAAIqH,GAAgBJ,GAAgBI,GAAgBF,EAGhD,OAFA/I,MAAMwI,YAAc,2CACpBxI,MAAMW,MAAMG,QAAU,SAGlCd,MAAMW,MAAMG,QAAU,OACtB,MAAMoI,EAAO,IAAIC,YACjBtG,QAAQuG,IAAIF,GAEZrH,KAAKlB,MAAMG,QAAU,OACrBoG,YAAYvG,MAAMG,QAAU,OAE5B,UACUuI,SAASH,SACT7H,uBAIR,MAAOrB,GACL6C,QAAQ7C,MAAM,sBAAuBA,OAIrD,MAAMsJ,MACFzB,cAEI0B,KAAKC,iBAAkB,EAI3B3B,cACI,GAAIP,oBAA8C,IAAzBiC,KAAKC,gBAA0B,CACpDD,KAAKC,iBAAkB,EAEvB,MAAMC,EAAgB,KAElBrC,QAAQzG,MAAMG,QAAU,QAExByC,YAAY5C,MAAMG,QAAU,QAG5BqG,gBAAgBxG,MAAMG,QAAU,QAEhCyG,wBAAwB5G,MAAMG,QAAU,OAGxC0G,eAAe7G,MAAMG,QAAU,QAE/BsD,QAAQzD,MAAMG,QAAU,QAExBwG,kBAAkBoC,oBAAoB,SAAUD,IAKpDnC,kBAAkBhG,iBAAiB,SAAUmI,KAMzD,MAAME,qBAAqBL,MACvBzB,cACI+B,QAGJ/B,cACQP,mBACAA,kBAAkBhG,iBAAiB,SAAU,KACT,YAA5BgG,kBAAkB1F,MAElB6D,UAAU9E,MAAMG,QAAU,QAK1B2E,UAAU9E,MAAMG,QAAU,UAO9C,MAAM+I,uBAAuBP,MACzBzB,cACI+B,QAGJ/B,cACQP,mBACAA,kBAAkBhG,iBAAiB,SAAU,KACT,iBAA5BgG,kBAAkB1F,OAAwD,cAA5B0F,kBAAkB1F,MAEhEwD,IAAIzE,MAAMG,QAAU,QAGpBsE,IAAIzE,MAAMG,QAAU,UAMxC,MAAMgJ,0BAA0BR,MAC5BzB,cACI+B,QAGJ/B,cACQP,mBACAA,kBAAkBhG,iBAAiB,SAAU,KACT,iBAA5BgG,kBAAkB1F,OAElByD,MAAM1E,MAAMG,QAAU,QAEtBwE,UAAU3E,MAAMG,QAAU,QAE1ByE,aAAa5E,MAAMG,QAAU,UAI7ByE,aAAa5E,MAAMG,QAAU,OAE7BwE,UAAU3E,MAAMG,QAAU,OAE1BuE,MAAM1E,MAAMG,QAAU,WAQ1C,SAASiJ,kBACL7C,YAAYvG,MAAMG,QAAU,QAC5Be,KAAKlB,MAAMG,QAAU,OAGzB,MAAMkJ,OAAS,IAAIpC,OAEbqC,MAAQ,IAAIX,MAClBW,MAAMC,cACN,MAAMC,aAAe,IAAIR,aACzBQ,aAAaC,cAEb,MAAMC,eAAiB,IAAIR,eAC3BQ,eAAeD,cACf,MAAME,kBAAoB,IAAIR,kBAC9BQ,kBAAkBF,cAClBJ,OAAOX,WACPW,OAAOO,YAIP,MAAMpB,YACFtB,cACI0B,KAAKjG,OAASzB,KAAKvB,cAAc,2BAA2BsB,MAC5D2H,KAAKlG,KAAOxB,KAAKvB,cAAc,uBAAuBsB,MACtD2H,KAAKpF,SAAWtC,KAAKvB,cAAc,2BAA2BsB,MAC9D2H,KAAKnC,QAAUvF,KAAKvB,cAAc,kBAAkBsB,MACpD2H,KAAKhG,YAAc1B,KAAKvB,cAAc,sBAAsBsB,MAC5D2H,KAAK9D,UAAY5D,KAAKvB,cAAc,qBAAqBsB,MACzD2H,KAAKnE,IAAMvD,KAAKvB,cAAc,cAAcsB,MAC5C2H,KAAKlE,MAAQxD,KAAKvB,cAAc,gBAAgBsB,MAChD2H,KAAKjE,UAAYzD,KAAKvB,cAAc,qBAAqBsB,MACzD2H,KAAKhE,aAAe1D,KAAKvB,cAAc,wBAAwBsB,MAC/D2H,KAAKnF,QAAUvC,KAAKvB,cAAc,kBAAkBsB,MACpD2H,KAAKrF,OAAS,UAoBtBjF,eAAeoK,SAASH,GACpB,MAAMpH,EAAQX,eAAeC,QAAQ,SAErC,IACI,MAAM/B,QAAiBC,MAAM,2CAA4C,CACrEC,OAAQ,OACRC,QAAS,CACLC,eAAgB,mBAChB6C,cAAiB,UAAUR,GAE/BpC,KAAMC,KAAKC,UAAUsJ,KAGnBsB,QAAqBnL,EAASmD,OAIpC,OAHAK,QAAQuG,IAAI,iBAAkBoB,GAC9B3H,QAAQuG,IAAIoB,GACZtB,EAAK9F,GAAKoH,EAAapH,GAChBoH,EAGX,MAAOxK,GAEH,MADA6C,QAAQ7C,MAAM,sBAAuBA,GAC/B,IAAID,MAAMC","file":"../js/main.min.js","sourcesContent":["const tokenAPI = 'https://ajax.test-danit.com/api/v2/cards/login';\nlet trueToken;\nasync function getToken(email, password) {\n  try {\n    const response = await fetch(tokenAPI, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    });\n\n    if (response.ok) {\n      const token = await response.text();\n      return token;\n    } else {\n      throw new Error('User is not registered!');\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nasync function showHide() {\n  const enterBtn = document.querySelector('.login-button');\n  const logoutBtn = document.querySelector('.logout-button');\n  const createVisitBtn = document.querySelector('.create-visit-button');\n  const filterPage = document.querySelector(\".filter__section\");\n  const header = document.querySelector(\".header\");\n\n  header.style.background = \"none\";\n  header.style.height = \"auto\";\n  filterPage.style.display = \"block\";\n  enterBtn.classList.add('hidden');\n  logoutBtn.classList.remove('hidden');\n  createVisitBtn.classList.remove('hidden');\n}\n\nasync function login() {\n  const enterBtn = document.querySelector('.login-button');\n  const logoutBtn = document.querySelector('.logout-button');\n\n  if (!sessionStorage.getItem('token')) {\n    enterBtn.addEventListener('click', showModal);\n  } else {\n    showHide();\n    await fetchAndDisplayCards();\n  }\n\n  logoutBtn.addEventListener('click', () => {\n    sessionStorage.removeItem('token')\n    window.location.reload()\n  });\n\n  async function showModal() {\n    const modalForm = document.querySelector('#authorization-modal');\n    modalForm.style.display = 'block';\n\n    const emailForm = modalForm.querySelector('input[type=\"email\"]');\n    const passwordForm = modalForm.querySelector('input[type=\"password\"]');\n    const btnForm = modalForm.querySelector('.send-button');\n\n    btnForm.addEventListener('click', handleSubmit);\n\n    modalForm.addEventListener('click', (e) => {\n      if (e.target.classList.contains('modal') || e.target.classList.contains('btn-close')) {\n        modalForm.style.display = 'none';\n        emailForm.value = '';\n        passwordForm.value = '';\n      }\n    });\n\n    async function handleSubmit(e) {\n      e.preventDefault();\n      if (emailForm.value && passwordForm.value) {\n        submitForm(modalForm, emailForm.value, passwordForm.value);\n      } else {\n        alert('Fill in all fields!');\n      }\n    }\n\n  }\n\n  async function submitForm(form, email, password) {\n    const token = await getToken(email, password);\n    sessionStorage.token = token;\n\n    if (token) {\n      showHide();\n      form.style.display = 'none';\n      trueToken = token;\n      await fetchAndDisplayCards();\n    }\n\n    return token;\n  }\n}\n\nasync function fetchAndDisplayCards() {\n  const token = sessionStorage.getItem('token');\n\n  if (token) {\n    try {\n      const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const cards = await response.json();\n\n        const taskBoard = document.querySelector(\"#taskBoard\");\n        taskBoard.innerHTML = \"\";\n\n        cards.forEach(async (cardData) => {\n          await displayCard(cardData);\n        });\n      } else {\n        console.error(\"Error fetching cards:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching cards:\", error);\n    }\n  }\n}\n\nlogin();\n\nasync function displayCard(cardData) {\n  const taskBoard = document.querySelector(\"#taskBoard\");\n  const cardContainer = document.createElement(\"div\");\n\n  cardContainer.className = \"card\";\n  cardContainer.setAttribute(\"data-id\", cardData.id);\n\n  cardContainer.innerHTML = `\n      <div class=\"card__text\">\n      <h4>Name:</h4> <p>${cardData.name}</p>\n      <h4>Doctor:</h4> <p>${cardData.doctor}</p>\n      <h4>Description:</h4> <p>${cardData.description}</p>\n      </div>\n      <div class=\"button__contianer\">\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\n      </div>\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\n    `;\n\n  taskBoard.appendChild(cardContainer);\n}\n\nasync function getAllCards() {\n  const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cards = await response.json();\n\n  cards.forEach(async (cardData) => {\n    await displayCard(cardData);\n  });\n}\n\nasync function deleteCard(cardId) {\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\n  const token = sessionStorage.getItem('token');\n\n  if (confirmation) {\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n\n    if (response.ok) {\n      const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\n      cardToRemove.remove();\n    } else {\n      console.error(\"Error to delete:\", response.statusText);\n    }\n  }\n}\n\n\nasync function openEditModal(cardId) {\n  const token = sessionStorage.getItem('token');\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cards = await response.json();\n\n  const optionActive = (value, option) => value === option ? \"selected\" : \"\";\n\n  const editForm = document.createElement(\"div\");\n  editForm.className = \"edit__form\";\n  editForm.innerHTML = `\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"${cards.name}\">\n      <label for=\"editName\" class=\"user-label\">Name</label>\n    </div>\n    <div class=\"select select__edit-container\">\n      <label for=\"editDoctor\" class=\"select__label\">Doctor</label>\n      <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\n        <option value=\"Cardiologist\" ${optionActive(cards.doctor, \"Cardiologist\")}>Cardiologist</option>\n        <option value=\"Dentist\"  ${optionActive(cards.doctor, \"Dentist\")}>Dentist</option>\n        <option value=\"Therapist\"  ${optionActive(cards.doctor, \"Therapist\")}>Therapist</option>\n      </select>\n    </div>\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"${cards.description}\">\n      <label for=\"editDescription\" class=\"user-label\">Description</label>\n    </div>\n    \n  <div class=\"select select__edit-container\">\n  <label for=\"editStatus\" class=\"select__label\">Status</label>\n    <select id=\"editStatus\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select status</option>\n      <option value=\"active\" ${optionActive(cards.status, \"active\")}>Active</option>\n      <option value=\"completed\" ${optionActive(cards.status, \"completed\")}>Completed</option>\n    </select>\n    </div>\n    <div class=\"select select__edit-container\">\n    <label for=\"editPriority\" class=\"select__label \">Priority</label>\n    <select id=\"editPriority\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select priority</option>\n      <option value=\"low\" ${optionActive(cards.priority, \"low\")}>Low</option>\n      <option value=\"medium\" ${optionActive(cards.priority, \"medium\")}>Medium</option>\n      <option value = \"high\" ${optionActive(cards.priority, \"high\")}> High</ >\n    </select > \n    </div>\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editComment\" value=\"${cards.comment}\">\n      <label for=\"editComment\" class=\"user-label\">Comment</label>\n    </div>\n    <div id=\"additionalFields\"></div>\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\n  `;\n\n  const editFormContainer = document.getElementById(\"editFormContainer\");\n  editFormContainer.innerHTML = \"\";\n  editFormContainer.appendChild(editForm);\n\n  const editModal = document.getElementById(\"editModal\");\n  editModal.style.display = \"block\";\n  handleDoctorChange(cards);\n}\n\nfunction handleDoctorChange() {\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\n\n  additionalFieldsContainer.innerHTML = \"\";\n\n  if (selectedDoctor === 'Cardiologist') {\n    additionalFieldsContainer.innerHTML = `\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\n        <label for=\"editAge\" class=\"user-label\">Age</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editPressure\">\n        <label for=\"editPressure\" class=\"user-label\">Normal pressure</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editBMI\">\n        <label for=\"editBMI\" class=\"user-label\">Body mass index</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"text\" id=\"editHeartDisease\">\n        <label for=\"editHeartDisease\" class=\"user-label\">Past diseases</label>\n      </div>\n    `;\n  } else if (selectedDoctor === 'Dentist') {\n    additionalFieldsContainer.innerHTML = `\n    <div class=\"input-group\">\n    <label for=\"editLastVisitDate\" class=\"select__label\">Date of the last visit</label>\n      <input required=\"\" name=\"text\" autocomplete=\"off\" class=\"input edit__date\" type=\"date\" id=\"editLastVisitDate\">\n    </div>\n    `;\n  } else if (selectedDoctor === 'Therapist') {\n    additionalFieldsContainer.innerHTML = `\n    <div class=\"input-group\">\n      <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\n      <label for=\"editAge\" class=\"user-label\">Age</label>\n    </div>\n    `;\n  }\n}\n\nfunction closeModal() {\n  const editModal = document.getElementById(\"editModal\");\n  editModal.style.display = \"none\";\n  const editForm = document.querySelector(\".edit__form\");\n  editForm.innerHTML = \"\";\n}\n\nasync function saveChanges(cardId) {\n  const token = sessionStorage.getItem('token');\n  const editForm = document.querySelector(\".edit__form\")\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\n  const newName = editForm.querySelector(\"#editName\").value;\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\n  const newComment = editForm.querySelector(\"#editComment\").value;\n\n  const updatedData = {\n    name: newName,\n    doctor: newDoctor,\n    description: newDescription,\n    status: newStatus,\n    priority: newPriority,\n    comment: newComment\n  };\n\n  if (newDoctor === \"Cardiologist\") {\n    const newAge = editForm.querySelector(\"#editAge\").value;\n    const newPressure = editForm.querySelector(\"#editPressure\").value;\n    const newBMi = editForm.querySelector(\"#editBMI\").value;\n    const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\n    updatedData.age = newAge;\n    updatedData.pulse = newPressure;\n    updatedData.massIndex = newBMi;\n    updatedData.pastDiseases = newDesease;\n  } else if (newDoctor === \"Dentist\") {\n    const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\n    updatedData.lastVisit = newDate;\n  } else if (newDoctor === \"Therapist\") {\n    const newAge = editForm.querySelector(\"#editAge\").value;\n    updatedData.age = newAge;\n  }\n\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(updatedData)\n  });\n\n  cardContainer.innerHTML = `\n  <div class=\"card__text\">\n  <h4>Name:</h4> <p>${newName}</p>\n  <h4>Doctor:</h4> <p>${newDoctor}</p>\n  <h4>Description:</h4> <p>${newDescription}</p>\n  </div>\n  <div class=\"button__contianer\">\n  <button onclick=\"showMore(${cardId})\">Show more</button>\n  <button onclick=\"openEditModal(${cardId})\">Edit</button>\n  </div>\n  <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\n      `;\n\n  closeModal();\n}\n\nasync function showMore(cardId) {\n  const token = sessionStorage.getItem('token');\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cardData = await response.json();\n\n  const detailsContainer = document.getElementById(\"detailsContainer\");\n  const detailsContent = document.createElement(\"div\");\n\n  detailsContent.className = \"details__content\";\n  const baseInfo = `\n    <h4>Name: <span>${cardData.name}</span></h4>\n    <h4>Doctor: <span>${cardData.doctor}</span></h4>\n    <h4>Description: <span>${cardData.description}</span></h4>\n    <h4>Priority: <span>${cardData.priority}</span></h4>\n    <h4>Status: <span>${cardData.status}</span></h4>\n    <h4>Comment for doctor: <span>${cardData.comment}</span></h4>\n  `;\n\n  if (cardData.doctor === 'Cardiologist') {\n    detailsContent.innerHTML = `\n    ${baseInfo}\n      <h4>Age: <span>${cardData.age}</span></h4>\n      <h4>Normalpressure: <span>${cardData.pulse}</span></h4>\n      <h4>Body mass index: <span>${cardData.massIndex}</span></h4>\n      <h4>Past diseases: <span>${cardData.pastDiseases}</span></h4>\n    `;\n  } else if (cardData.doctor === 'Dentist') {\n    detailsContent.innerHTML = `\n    ${baseInfo}\n      <h4>Date of the last visit:</h4> <p> ${cardData.lastVisit}</p>\n    `;\n  } else if (cardData.doctor === 'Therapist') {\n    detailsContent.innerHTML = `\n    ${baseInfo}\n    <h4>Age: <span>${cardData.age}</span></h4>\n    `;\n  }\n\n  detailsContainer.innerHTML = \"\";\n  detailsContainer.appendChild(detailsContent);\n\n  const detailsModal = document.getElementById(\"detailsModal\");\n  detailsModal.style.display = \"block\";\n}\n\nfunction closeShowMore() {\n  const detailsModal = document.getElementById(\"detailsModal\");\n  detailsModal.style.display = \"none\";\n}\n\nasync function filterCards() {\n  const token = sessionStorage.getItem('token');\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\n  const doctorFilter = document.getElementById(\"doctorFilter\").value;\n  const statusFilter = document.getElementById(\"statusFilter\").value;\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\n\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const cards = await response.json();\n\n  cards.forEach(card => {\n    const cardToRemove = document.querySelector(`.card[data-id=\"${card.id}\"]`);\n    const nameElement = card.name;\n    const doctorElement = card.doctor;\n    const statusElement = card.status;\n    const priorityElement = card.priority;\n\n    const name = nameElement ? nameElement.toLowerCase() : \"\";\n    const doctor = doctorElement ? doctorElement : \"\";\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\n\n    const nameMatch = name.includes(searchInput);\n    const doctorMatch = (doctorFilter === '' || doctor === doctorFilter);\n    const statusMatch = (statusFilter === '' || status === statusFilter);\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\n\n    if (nameMatch && statusMatch && priorityMatch && doctorMatch) {\n      cardToRemove.style.display = \"\";\n    } else {\n      cardToRemove.style.display = \"none\";\n    }\n  });\n}\n\n\n\n\n\n\n\n\n\n\n","const main = document.querySelector('main');\r\n\r\nconst btnMakeForm = document.querySelector('.header__btn-make-visit');\r\nconst form = document.querySelector('.header__form');\r\n\r\nconst createModal = document.getElementById(\"createModal\");\r\nconst inputCreateName = document.querySelector(\"#create__inputName\")\r\nconst purpose = document.querySelector('#create__inputPurpose')\r\nconst age = document.querySelector('#create__inputAge')\r\nconst pulse = document.querySelector('#create__inputPressure')\r\nconst massIndex = document.querySelector('#create__inputBMI')\r\nconst description = document.querySelector('#create__inputDescription')\r\nconst pastDiseases = document.querySelector('#create__inputDisease')\r\nconst lastVisit = document.querySelector('#create__inputLastVisit')\r\nconst comment = document.querySelector('#create__inputComment')\r\nconst error = document.querySelector('.form__error')\r\nconst btnCloseForm = document.querySelector('.form__button-close-form')\r\nconst selectMenuDoctors = document.querySelector('.form__selector-doctors')\r\nconst selectPriorityContainer = document.querySelector(\"#create__selectPriority\")\r\n// const selectUrgency = document.querySelector('.form__selector-urgency')\r\nconst btnCreateVisit = document.querySelector('.form__button-create-visit')\r\nlet elementsForm = document.querySelectorAll('.form input, .form select')\r\nlet formData = []\r\nclass Module {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    closeForm() {\r\n        btnCloseForm.addEventListener('click', (event) => {\r\n            event.preventDefault()\r\n            form.style.display = 'none';\r\n            // modalForm.style.display = \"none\";\r\n            createModal.style.display = \"none\"; \r\n        elementsForm.forEach((element)=>{\r\n            element.value = ''\r\n        })})\r\n\r\ndocument.addEventListener('click', (event)=>{\r\n    if(event.target === createModal){\r\nform.style.display = `none`\r\ncreateModal.style.display = 'none'\r\nelementsForm.forEach((element)=>{\r\n    element.value = ''\r\n})\r\n    }\r\n})\r\n       \r\n\r\n\r\n    }\r\n    sendInfo() {\r\n\r\n        btnCreateVisit.addEventListener('click', async (event) => {\r\n            event.preventDefault();\r\n            const fields = Array.from(document.querySelectorAll('.form div')).filter((divElement) => {\r\n                return window.getComputedStyle(divElement).display !== 'none' && divElement.id !== 'create__inputComment'\r\n            }).some((divElement) => {\r\n                const elements = Array.from(divElement.querySelectorAll('input, select'))\r\n                return elements.some((inputElement) => inputElement.value === '')\r\n                \r\n            });\r\n            \r\n            if (fields) {\r\n                error.style.display = 'block';\r\n                return;\r\n            } if (age.style.display !== 'none') {\r\n\r\n                if (parseFloat(document.querySelector('#createAge').value) >= 150 || parseFloat(document.querySelector('#createAge').value) <= 0) {\r\n                    error.textContent = 'Incorrect value! Enter your real age';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            if (pulse.style.display !== 'none') {\r\n\r\n                const pressureValue = parseFloat(document.querySelector('#createPressure').value);\r\n                if (isNaN(pressureValue) || pressureValue >= 170 || pressureValue <= 50) {\r\n                    error.textContent = 'Incorrect value! Enter your real pulse';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            if (massIndex.style.display !== 'none') {\r\n\r\n                const massValue = parseFloat(document.querySelector('#createBMI').value);\r\n                if (isNaN(massValue) || massValue >= 700 || massValue <= 0) {\r\n                    error.textContent = 'Incorrect value! Enter your real mass index';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }}      \r\n                const createNameValue = document.querySelector('#createName').value;\r\n                if (!isNaN(parseFloat(createNameValue))) {\r\n                    error.textContent = 'Incorrect value! Enter your real name';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n                if (lastVisit.style.display !== 'none') {\r\n                    const minimalVisit= new Date('1950-01-01')\r\n                    const maxVisit= new Date()\r\n                    const lastVisitValue =  document.querySelector('#createLastVisitDate')\r\n                    const convertValue = new Date(lastVisitValue.value)\r\n                    if (convertValue <= minimalVisit || convertValue >= maxVisit) {\r\n                        error.textContent = 'Incorrect value! Enter correct data';\r\n                        error.style.display = 'block';\r\n                        return;\r\n                    }}   \r\n            error.style.display = 'none'\r\n            const data = new CreateVisit()\r\n            console.log(data);\r\n            // data.getInfo();\r\n            form.style.display = 'none'\r\n            createModal.style.display = \"none\"\r\n            // btnMakeForm.style.display = 'block'\r\n            try {\r\n                await sendInfo(data);\r\n                await fetchAndDisplayCards()\r\n                // data.createCard();\r\n                // data.deleteCard();\r\n                // saveCards.saveToLocalStorage(data);\r\n            } catch (error) {\r\n                console.error('Error sending data:', error)\r\n            }\r\n        })}}\r\n\r\nclass Visit {\r\n    constructor() {\r\n\r\n        this.dontAddElements = true\r\n\r\n    }\r\n\r\n    makeOptions() {\r\n        if (selectMenuDoctors && this.dontAddElements === true) {\r\n            this.dontAddElements = false\r\n\r\n            const changeHandler = () => {\r\n                // paragraphPurpose.style.display = 'block'\r\n                purpose.style.display = 'block'\r\n                // paragraphDescription.style.display = 'block'\r\n                description.style.display = 'block'\r\n                // paragraphUrgency.style.display = 'block'\r\n\r\n                inputCreateName.style.display = \"block\";\r\n\r\n                selectPriorityContainer.style.display = 'flex';\r\n                // paragraphName.style.display = 'block'\r\n                // fullName.style.display = 'block'\r\n                btnCreateVisit.style.display = 'block'\r\n                // paragraphComment.style.display = 'block'\r\n                comment.style.display = 'block'\r\n                // header.style.height = '1000px'\r\n                selectMenuDoctors.removeEventListener('change', changeHandler);\r\n\r\n\r\n            };\r\n\r\n            selectMenuDoctors.addEventListener('change', changeHandler)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nclass VisitDentist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === 'Dentist') {\r\n                    // paragraphLastVisit.style.display = 'block'\r\n                    lastVisit.style.display = 'block'\r\n\r\n\r\n                } else {\r\n                    // paragraphLastVisit.style.display = 'none'\r\n                    lastVisit.style.display = 'none'\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n}\r\nclass VisitTherapist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === 'Cardiologist' || selectMenuDoctors.value === \"Therapist\") {\r\n                    // paragraphAge.style.display = 'block'\r\n                    age.style.display = 'block'\r\n                } else {\r\n                    // paragraphAge.style.display = 'none'\r\n                    age.style.display = 'none'\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass VisitCardiologist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === \"Cardiologist\") {\r\n                    // paragraphPastDiseases.style.display = 'block'\r\n                    pulse.style.display = 'block'\r\n                    // paragraphMassIndex.style.display = 'block'\r\n                    massIndex.style.display = 'block'\r\n                    // paragraphPastDiseases.style.display = 'block'\r\n                    pastDiseases.style.display = 'block'\r\n\r\n                } else {\r\n                    // paragraphPastDiseases.style.display = 'none'\r\n                    pastDiseases.style.display = 'none'\r\n                    // paragraphMassIndex.style.display = 'none'\r\n                    massIndex.style.display = 'none'\r\n                    // paragraphPastDiseases.style.display = 'none'\r\n                    pulse.style.display = 'none'\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction openModalWindow() {\r\n    createModal.style.display = \"block\";\r\n    form.style.display = `flex`\r\n}\r\n\r\nconst module = new Module()\r\n\r\nconst visit = new Visit()\r\nvisit.makeOptions()\r\nconst visitDentist = new VisitDentist()\r\nvisitDentist.doctorNotes()\r\n\r\nconst visitTherapist = new VisitTherapist()\r\nvisitTherapist.doctorNotes()\r\nconst visitCardiologist = new VisitCardiologist()\r\nvisitCardiologist.doctorNotes()\r\nmodule.sendInfo()\r\nmodule.closeForm()\r\n\r\n\r\n\r\nclass CreateVisit {\r\n    constructor() {\r\n        this.doctor = form.querySelector('.form__selector-doctors').value\r\n        this.name = form.querySelector('.form__patient-name').value\r\n        this.priority = form.querySelector('.form__selector-urgency').value\r\n        this.purpose = form.querySelector('.form__purpose').value\r\n        this.description = form.querySelector('.form__description').value\r\n        this.lastVisit = form.querySelector('.form__last-visit').value\r\n        this.age = form.querySelector('.form__age').value\r\n        this.pulse = form.querySelector('.form__pulse').value\r\n        this.massIndex = form.querySelector('.form__mass-index').value\r\n        this.pastDiseases = form.querySelector('.form__past-diseases').value\r\n        this.comment = form.querySelector('.form__comment').value\r\n        this.status = \"active\"\r\n    }\r\n    // getInfo() {\r\n    //     this.doctor = form.querySelector('.form__selector-doctors').value\r\n    //     this.name = form.querySelector('.form__patient-name').value\r\n    //     this.priority = form.querySelector('.form__selector-urgency').value\r\n    //     this.purpose = form.querySelector('.form__purpose').value\r\n    //     this.description = form.querySelector('.form__description').value\r\n    //     this.lastVisit = form.querySelector('.form__last-visit').value\r\n    //     this.age = form.querySelector('.form__age').value\r\n    //     this.pulse = form.querySelector('.form__pulse').value\r\n    //     this.massIndex = form.querySelector('.form__mass-index').value\r\n    //     this.pastDiseases = form.querySelector('.form__past-diseases').value\r\n    //     this.error = form.querySelector('.form__comment').value\r\n    //     this.status = \"active\"\r\n    // }\r\n}\r\n\r\n\r\n\r\nasync function sendInfo(data) {\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    try {\r\n        const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        const responseData = await response.json()\r\n        console.log('Response data:', responseData)\r\n        console.log(responseData)\r\n        data.id = responseData.id\r\n        return responseData\r\n\r\n    }\r\n    catch (error) {\r\n        console.error('Error sending data:', error)\r\n        throw new Error(error)\r\n    }\r\n}\r\n// async function deleteCards(id) {\r\n//     const token = sessionStorage.getItem('token');\r\n\r\n//     console.log(id);\r\n//     try {\r\n//         const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${id}`, {\r\n//             method: 'DELETE',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Authorization': `Bearer ${token}`\r\n//             },\r\n//         });\r\n\r\n//     } catch (error) {\r\n//         console.error('Error sending data:', error)\r\n//         throw new Error(error)\r\n//     }\r\n// }\r\n\r\n// class LS {\r\n//     constructor() {\r\n//         this.retrieveStoredCards()\r\n//     }\r\n\r\n//     saveToLocalStorage(data) {\r\n//         let cardsData = JSON.parse(localStorage.getItem('storedCards')) || []\r\n//         cardsData.push(data)\r\n//         localStorage.setItem('storedCards', JSON.stringify(cardsData))\r\n//     }\r\n\r\n//     retrieveStoredCards() {\r\n//         const cardsData = JSON.parse(localStorage.getItem('storedCards')) || []\r\n\r\n//         cardsData.forEach(cardData => {\r\n//             const card = new CreateVisit()\r\n//             Object.assign(card, cardData)\r\n//             card.id = cardData.id;\r\n//             card.createCard()\r\n//             card.deleteCard()\r\n//         });\r\n//     }\r\n//     deleteCard(id) {\r\n//         console.log(id);\r\n//         let cardsData = JSON.parse(localStorage.getItem('storedCards')) || []\r\n//         const index = cardsData.findIndex(cardData => cardData.id === id)\r\n//         if (index !== -1) {\r\n//             cardsData.splice(index, 1)\r\n//             localStorage.setItem('storedCards', JSON.stringify(cardsData))\r\n//         } else {\r\n//             console.log('карточка не знайдена')\r\n//         }\r\n//     }\r\n// }\r\n\r\n// const saveCards = new LS()\r\n"]}