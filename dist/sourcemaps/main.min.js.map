{"version":3,"sources":["main.js"],"names":["token","async","displayCard","cardData","taskBoard","document","querySelector","cardContainer","createElement","className","setAttribute","id","status","priority","innerHTML","name","doctor","appendChild","getAllCards","response","fetch","headers","Content-Type","Authorization","json","forEach","deleteCard","cardId","confirm","method","ok","remove","console","error","statusText","openEditModal","cards","optionActive","value","option","editForm","description","editFormContainer","getElementById","style","display","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","updatedData","newAge","newPressure","newBMi","newDesease","age","pressure","bmi","diseases","newDate","date","body","JSON","stringify","showMore","detailsContainer","detailsContent","baseInfo","closeDetailsModal","filterCards","searchInput","toLowerCase","statusFilter","priorityFilter","querySelectorAll","card","nameElement","statusElement","getAttribute","priorityElement","innerText","split","nameMatch","includes","statusMatch","priorityMatch"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["const token = \"6b6edd59-d784-4e87-a1cb-342f6158ace1\";\r\n\r\n// fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n//   method: 'POST',\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//     'Authorization': `Bearer ${token}`\r\n//   },\r\n//   body: JSON.stringify({\r\n//     // name: 'Білий Рома',\r\n//     name: 'Кіндер Андрій',\r\n//     // name: 'Лисак Влад',\r\n//     title: 'Визит к кардиологу',\r\n//     description: 'Плановый визит',\r\n//     doctor: 'Cardiologist',\r\n//     bp: '24',\r\n//     age: 23,\r\n//     weight: 70,\r\n//     // status: \"Active\",\r\n//     status: \"Completed\",\r\n//     // priority: \"low\",\r\n//     priority: \"medium\",\r\n//     // priority: \"high\",\r\n//   })\r\n// })\r\n//   .then(response => response.json())\r\n//   .then(response => console.log(response))\r\n\r\n\r\nasync function displayCard(cardData) {\r\n  const taskBoard = document.querySelector(\"#taskBoard\");\r\n  const cardContainer = document.createElement(\"div\");\r\n  cardContainer.className = \"card\";\r\n  cardContainer.setAttribute(\"data-id\", cardData.id);\r\n  cardContainer.setAttribute('data-status', cardData.status);\r\n  cardContainer.setAttribute('data-priority', cardData.priority);\r\n\r\n  cardContainer.innerHTML = `\r\n      <p>Name: ${cardData.name}</p>\r\n      <p>Doctor: ${cardData.doctor}</p>\r\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\r\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\r\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\r\n    `;\r\n\r\n  taskBoard.appendChild(cardContainer);\r\n}\r\n\r\nasync function getAllCards() {\r\n  const response = await fetch(\"https://ajax.test-danit.com/api/v2/cards\", {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  cards.forEach(async (cardData) => {\r\n    await displayCard(cardData);\r\n  });\r\n}\r\n\r\ngetAllCards();\r\n\r\nasync function deleteCard(cardId) {\r\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\r\n\r\n  if (confirmation) {\r\n    const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const cardToRemove = document.querySelector(`.card[data-id=\"${cardId}\"]`);\r\n      cardToRemove.remove();\r\n    } else {\r\n      console.error(\"Error to delete:\", response.statusText);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function openEditModal(cardId) {\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cards = await response.json();\r\n\r\n  const optionActive = (value, option) => value === option ? \"selected\" : \"\";\r\n\r\n  const editForm = document.createElement(\"div\");\r\n  editForm.className = \"edit-form\";\r\n  editForm.innerHTML = `\r\n    <label for=\"editName\">Name:</label>\r\n    <input type=\"text\" id=\"editName\" value=\"${cards.name}\">\r\n    <label for=\"editDoctor\">Doctor:</label>\r\n    <select id=\"editDoctor\" onchange=\"handleDoctorChange()\">\r\n      <option value=\"Cardiologist\" ${optionActive(cards.doctor, \"Cardiologist\")}>Cardiologist</option>\r\n      <option value=\"Dentist\"  ${optionActive(cards.doctor, \"Dentist\")}>Dentist</option>\r\n      <option value=\"Therapist\"  ${optionActive(cards.doctor, \"Therapist\")}>Therapist</option>\r\n    </select>\r\n    <label for=\"editDescription\">Description:</label>\r\n    <input type=\"text\" id=\"editDescription\" value=\"${cards.description}\">\r\n    <label for=\"editStatus\">Status:</label>\r\n    <select id=\"editStatus\">\r\n      <option value=\"\" disabled selected>Select status</option>\r\n      <option value=\"active\" ${optionActive(cards.status, \"active\")}>Active</option>\r\n      <option value=\"completed\" ${optionActive(cards.status, \"completed\")}>Completed</option>\r\n    </select>\r\n    <label for=\"editPriority\">Priority:</label>\r\n    <select id=\"editPriority\">\r\n      <option value=\"\" disabled selected>Select priority</option>\r\n      <option value=\"low\" ${optionActive(cards.priority, \"low\")}>Low</option>\r\n      <option value=\"medium\" ${optionActive(cards.priority, \"medium\")}>Medium</option>\r\n      <option value = \"high\" ${optionActive(cards.priority, \"high\")}> High</ >\r\n    </select > \r\n    <div id=\"additionalFields\"></div>\r\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\r\n  `;\r\n\r\n  const editFormContainer = document.getElementById(\"editFormContainer\");\r\n  editFormContainer.innerHTML = \"\";\r\n  editFormContainer.appendChild(editForm);\r\n\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"block\";\r\n  handleDoctorChange(cards);\r\n}\r\n\r\nfunction handleDoctorChange() {\r\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\r\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\r\n\r\n  additionalFieldsContainer.innerHTML = \"\";\r\n\r\n  if (selectedDoctor === 'Cardiologist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n      <label for=\"editAge\">Age:</label>\r\n      <input type=\"text\" id=\"editAge\">\r\n      <label for=\"editPressure\">Normal blood pressure:</label>\r\n      <input type=\"text\" id=\"editPressure\" >\r\n      <label for=\"editBMI\">Body mass index</label>\r\n      <input type=\"text\" id=\"editBMI\" >\r\n      <label for=\"editHeartDisease\">Past diseases of the cardiovascular system:</label>\r\n      <input type=\"text\" id=\"editHeartDisease\" >\r\n    `;\r\n  } else if (selectedDoctor === 'Dentist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n      <label for=\"editLastVisitDate\">Date of the last visit:</label>\r\n      <input type=\"date\" id=\"editLastVisitDate\">\r\n    `;\r\n  } else if (selectedDoctor === 'Therapist') {\r\n    additionalFieldsContainer.innerHTML = `\r\n      <label for=\"editAge\">Age:</label>\r\n      <input type=\"number\" id=\"editAge\">\r\n    `;\r\n  }\r\n}\r\n\r\nfunction closeModal() {\r\n  const editModal = document.getElementById(\"editModal\");\r\n  editModal.style.display = \"none\";\r\n  const editForm = document.querySelector(\".edit-form\")\r\n  editForm.innerHTML = \"\";\r\n}\r\n\r\nasync function saveChanges(cardId) {\r\n  const editForm = document.querySelector(\".edit-form\")\r\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\r\n  const newName = editForm.querySelector(\"#editName\").value;\r\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\r\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\r\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\r\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\r\n\r\n  const updatedData = {\r\n    name: newName,\r\n    doctor: newDoctor,\r\n    description: newDescription,\r\n    status: newStatus,\r\n    priority: newPriority\r\n  };\r\n\r\n  if (newDoctor === \"Cardiologist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    const newPressure = editForm.querySelector(\"#editPressure\").value;\r\n    const newBMi = editForm.querySelector(\"#editBMI\").value;\r\n    const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\r\n    updatedData.age = newAge;\r\n    updatedData.pressure = newPressure;\r\n    updatedData.bmi = newBMi;\r\n    updatedData.diseases = newDesease;\r\n  } else if (newDoctor === \"Dentist\") {\r\n    const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\r\n    updatedData.date = newDate;\r\n  } else if (newDoctor === \"Therapist\") {\r\n    const newAge = editForm.querySelector(\"#editAge\").value;\r\n    updatedData.age = newAge;\r\n  }\r\n\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(updatedData)\r\n  });\r\n\r\n  cardContainer.innerHTML = `\r\n      <p>Name: ${newName}</p>\r\n      <p>Doctor: ${newDoctor}</p>\r\n      <button onclick=\"showMore(${cardId})\">Show more</button>\r\n      <button onclick=\"openEditModal(${cardId})\">Edit</button>\r\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\r\n      `;\r\n  closeModal();\r\n}\r\n\r\nasync function showMore(cardId) {\r\n  const response = await fetch(`https://ajax.test-danit.com/api/v2/cards/${cardId}`, {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  });\r\n  const cardData = await response.json();\r\n\r\n  const detailsContainer = document.getElementById(\"detailsContainer\");\r\n  const detailsContent = document.createElement(\"div\");\r\n\r\n  detailsContent.className = \"details-content\";\r\n  const baseInfo = `\r\n    <p>Name: ${cardData.name}</p>\r\n    <p>Doctor: ${cardData.doctor}</p>\r\n    <p>Description: ${cardData.description}</p>\r\n    <p>Priority: ${cardData.priority}</p>\r\n    <p>Status: ${cardData.status}</p>\r\n  `;\r\n\r\n  if (cardData.doctor === 'Cardiologist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <p>Age: ${cardData.age}</p>\r\n      <p>Normal blood pressure: ${cardData.pressure}</p>\r\n      <p>Body mass index: ${cardData.bmi}</p>\r\n      <p>Past diseases of the cardiovascular system: ${cardData.diseases}</p>\r\n    `;\r\n  } else if (cardData.doctor === 'Dentist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <p>Date of the last visit: ${cardData.date}</p>\r\n    `;\r\n  } else if (cardData.doctor === 'Therapist') {\r\n    detailsContent.innerHTML = `\r\n    ${baseInfo}\r\n      <p>Age: ${cardData.age}</p>\r\n    `;\r\n  }\r\n\r\n  detailsContainer.innerHTML = \"\";\r\n  detailsContainer.appendChild(detailsContent);\r\n\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"block\";\r\n}\r\n\r\nfunction closeDetailsModal() {\r\n  const detailsModal = document.getElementById(\"detailsModal\");\r\n  detailsModal.style.display = \"none\";\r\n}\r\n\r\nfunction filterCards() {\r\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\r\n  const statusFilter = document.getElementById(\"statusFilter\").value;\r\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\r\n  const cards = document.querySelectorAll(\".card\");\r\n\r\n  cards.forEach(card => {\r\n    const nameElement = card.querySelector('p:first-child');\r\n    const statusElement = card.getAttribute('data-status');\r\n    const priorityElement = card.getAttribute('data-priority');\r\n\r\n    const name = nameElement ? nameElement.innerText.split(': ')[1].toLowerCase() : \"\";\r\n    const status = statusElement ? statusElement.toLowerCase() : \"\";\r\n    const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\r\n\r\n    const nameMatch = name.includes(searchInput);\r\n    const statusMatch = (statusFilter === '' || status === statusFilter);\r\n    const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\r\n\r\n    if (nameMatch && statusMatch && priorityMatch) {\r\n      card.style.display = \"\";\r\n    } else {\r\n      card.style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n\r\n"]}